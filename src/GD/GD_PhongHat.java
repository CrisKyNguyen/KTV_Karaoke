/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GD;

import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.text.NumberFormat;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.Locale;

import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;


import dao.DAO_LoaiPhong;
import dao.DAO_Phong;
import entity.LoaiPhong;
import entity.Phong;

/**
 *
 * @author Windows
 */
public class GD_PhongHat extends javax.swing.JFrame {
    /**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	public GD_PhongHat() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    private DefaultTableModel modelDSP, modelDSLP;
    private String[] colsPhong={"Mã phòng", "Tên phòng", "Loại phòng", "Tình trạng", "Ghi chú"};
    private String[] colsLoaiPhong={"Mã loại phòng", "Tên loại phòng", "Giá"};
    
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelVien = new javax.swing.JPanel();
        panelLon = new javax.swing.JPanel();
        lblPhongHat = new javax.swing.JLabel();
        panelDSPhong = new javax.swing.JPanel();
        scrollPaneDSPhong = new javax.swing.JScrollPane();
        tblDSPhong = new javax.swing.JTable();
        lblDSPhong = new javax.swing.JLabel();
        btnTimPhong = new javax.swing.JButton();
        btnQuayLai = new javax.swing.JButton();
        panelPhong = new javax.swing.JPanel();
        txtFdMaPhong = new javax.swing.JTextField();
        txtFdTenPhong = new javax.swing.JTextField();
        txtFdGia = new javax.swing.JTextField();
        txtFdGhiChu = new javax.swing.JTextField();
        lblPhong = new javax.swing.JLabel();
        lblMaPhong = new javax.swing.JLabel();
        lblTenPhong = new javax.swing.JLabel();
        lblLoaiPhong = new javax.swing.JLabel();
        lblGia = new javax.swing.JLabel();
        lblGhiChu = new javax.swing.JLabel();
        btnThemPhong = new javax.swing.JButton();
        btnXoaPhong = new javax.swing.JButton();
        btnCapNhatPhong = new javax.swing.JButton();
        btnLamMoiPhong = new javax.swing.JButton();
        cbxLoaiPhong = new javax.swing.JComboBox<>();
        panelDSLoaiPhong = new javax.swing.JPanel();
        scrollPaneDSLoaiPhong = new javax.swing.JScrollPane();
        tblLoaiPhong = new javax.swing.JTable();
        lblDSLoaiPhong = new javax.swing.JLabel();
        panelLoaiPhong = new javax.swing.JPanel();
        lblTTLoaiPhong = new javax.swing.JLabel();
        lblMaLoaiPhong = new javax.swing.JLabel();
        lblTenLoaiPhong = new javax.swing.JLabel();
        txtFdMaLoaiPhong = new javax.swing.JTextField();
        txtFdTenLoaiPhong = new javax.swing.JTextField();
        btnThemLoaiPhong = new javax.swing.JButton();
        btnXoaLoaiPhong = new javax.swing.JButton();
        btnCapNhatLoaiPhong = new javax.swing.JButton();
        btnLamMoiLoaiPhong = new javax.swing.JButton();
        lblGiaLP = new javax.swing.JLabel();
        txtGiaLP = new javax.swing.JTextField();
        btnTimLoaiPhong = new javax.swing.JButton();
        txtTimPhong = new javax.swing.JTextField();
        txtTimLoaiPhong = new javax.swing.JTextField();
        btnLamMoiDSP = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("PhongHat");
        setBackground(new java.awt.Color(102, 204, 255));
        setPreferredSize(new java.awt.Dimension(1000, 800));
        setResizable(false);

        panelVien.setBackground(new java.awt.Color(204, 255, 255));

        panelLon.setBackground(new java.awt.Color(0, 204, 255));

        lblPhongHat.setFont(new java.awt.Font("Tahoma", 1, 30)); // NOI18N
        lblPhongHat.setForeground(new java.awt.Color(0, 0, 102));
        lblPhongHat.setText("PHÒNG HÁT");

        panelDSPhong.setBackground(new java.awt.Color(204, 255, 255));

        lblDSPhong.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lblDSPhong.setForeground(new java.awt.Color(0, 0, 102));
        lblDSPhong.setText("DANH SÁCH PHÒNG");
        
        // Model DSP
        modelDSP = new DefaultTableModel(colsPhong,0);
        tblDSPhong = new JTable(modelDSP);
        scrollPaneDSPhong.setViewportView(tblDSPhong);
        
        // Sự kiện click trên tblDSNV
        ListSelectionModel listSelectionModelDSP = tblDSPhong.getSelectionModel();
        // Thiết lập chỉ click được 1 dòng
        listSelectionModelDSP.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        // Xử lý sự kiện click
        listSelectionModelDSP.addListSelectionListener(new ListSelectionListener() {
			
			@Override
			public void valueChanged(ListSelectionEvent e) {
				// TODO Auto-generated method stub
				hienThiChiTietPhong();
			}
		});

        javax.swing.GroupLayout panelDSPhongLayout = new javax.swing.GroupLayout(panelDSPhong);
        panelDSPhong.setLayout(panelDSPhongLayout);
        panelDSPhongLayout.setHorizontalGroup(
            panelDSPhongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelDSPhongLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblDSPhong)
                .addGap(174, 174, 174))
            .addComponent(scrollPaneDSPhong)
        );
        panelDSPhongLayout.setVerticalGroup(
            panelDSPhongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelDSPhongLayout.createSequentialGroup()
                .addComponent(lblDSPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollPaneDSPhong, javax.swing.GroupLayout.DEFAULT_SIZE, 293, Short.MAX_VALUE))
        );

        btnTimPhong.setBackground(new java.awt.Color(255, 255, 255));
        btnTimPhong.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnTimPhong.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/ic_tim.png"))); // NOI18N
        btnTimPhong.setText("TÌM");
        btnTimPhong.setBorderPainted(false);
        btnTimPhong.setPreferredSize(new java.awt.Dimension(55, 35));
        btnTimPhong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimPhongActionPerformed(evt);
            }
        });

        btnQuayLai.setBackground(new java.awt.Color(255, 255, 255));
        btnQuayLai.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnQuayLai.setText("QUAY LẠI");
        btnQuayLai.setBorderPainted(false);
        btnQuayLai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuayLaiActionPerformed(evt);
            }
        });

        panelPhong.setBackground(new java.awt.Color(204, 255, 255));

        txtFdMaPhong.setEditable(false);
        txtFdMaPhong.setBackground(new java.awt.Color(204, 204, 204));

        txtFdGia.setEditable(false);
        txtFdGia.setBackground(new java.awt.Color(204, 204, 204));
        txtFdGia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFdGiaActionPerformed(evt);
            }
        });

        txtFdGhiChu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFdGhiChuActionPerformed(evt);
            }
        });

        lblPhong.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lblPhong.setForeground(new java.awt.Color(0, 0, 102));
        lblPhong.setText("THÔNG TIN PHÒNG HÁT");

        lblMaPhong.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblMaPhong.setText("Mã phòng");

        lblTenPhong.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblTenPhong.setText("Tên phòng");

        lblLoaiPhong.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblLoaiPhong.setText("Loại phòng");

        lblGia.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblGia.setText("Giá /1h");

        lblGhiChu.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblGhiChu.setText("Ghi chú");

        btnThemPhong.setBackground(new java.awt.Color(255, 255, 255));
        btnThemPhong.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnThemPhong.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/ic_add.png"))); // NOI18N
        btnThemPhong.setText("THÊM");
        btnThemPhong.setBorderPainted(false);
        btnThemPhong.setPreferredSize(new java.awt.Dimension(120, 30));
        btnThemPhong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
					btnThemPhongActionPerformed(evt);
				} catch (ParseException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
            }
        });

        btnXoaPhong.setBackground(new java.awt.Color(255, 255, 255));
        btnXoaPhong.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnXoaPhong.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/ic_xoa.png"))); // NOI18N
        btnXoaPhong.setText("XOÁ");
        btnXoaPhong.setBorderPainted(false);
        btnXoaPhong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaPhongActionPerformed(evt);
            }
        });

        btnCapNhatPhong.setBackground(new java.awt.Color(255, 255, 255));
        btnCapNhatPhong.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnCapNhatPhong.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/ic_refesh (1).png"))); // NOI18N
        btnCapNhatPhong.setText("CẬP NHẬT");
        btnCapNhatPhong.setBorderPainted(false);
        btnCapNhatPhong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
					btnCapNhatPhongActionPerformed(evt);
				} catch (Exception e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
            }
        });

        btnLamMoiPhong.setBackground(new java.awt.Color(255, 255, 255));
        btnLamMoiPhong.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnLamMoiPhong.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/ic_lamMoi.png"))); // NOI18N
        btnLamMoiPhong.setText("LÀM MỚI");
        btnLamMoiPhong.setBorderPainted(false);
        btnLamMoiPhong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLamMoiPhongActionPerformed(evt);
            }
        });

//        cbxLoaiPhong.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        
        cbxLoaiPhong.addItemListener(new ItemListener() {
			
			@Override
			public void itemStateChanged(ItemEvent e) {
				// TODO Auto-generated method stub
				txtFdGia.setText(getGiaTheoTenLP(cbxLoaiPhong.getSelectedItem()+""));
			}
		});
        
        javax.swing.GroupLayout panelPhongLayout = new javax.swing.GroupLayout(panelPhong);
        panelPhong.setLayout(panelPhongLayout);
        panelPhongLayout.setHorizontalGroup(
            panelPhongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelPhongLayout.createSequentialGroup()
                .addContainerGap(40, Short.MAX_VALUE)
                .addGroup(panelPhongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelPhongLayout.createSequentialGroup()
                        .addComponent(lblPhong)
                        .addGap(64, 64, 64))
                    .addGroup(panelPhongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelPhongLayout.createSequentialGroup()
                            .addGroup(panelPhongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblMaPhong)
                                .addComponent(lblTenPhong)
                                .addComponent(lblLoaiPhong)
                                .addComponent(lblGia))
                            .addGap(18, 18, 18)
                            .addGroup(panelPhongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtFdTenPhong)
                                .addComponent(txtFdMaPhong)
                                .addComponent(cbxLoaiPhong, 0, 274, Short.MAX_VALUE)))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelPhongLayout.createSequentialGroup()
                            .addComponent(lblGhiChu)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                            .addGroup(panelPhongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtFdGhiChu, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(txtFdGia, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelPhongLayout.createSequentialGroup()
                                    .addGroup(panelPhongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(btnLamMoiPhong, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnCapNhatPhong, javax.swing.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(panelPhongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(btnThemPhong, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE)
                                        .addComponent(btnXoaPhong, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))))
                .addGap(32, 32, 32))
        );
        panelPhongLayout.setVerticalGroup(
            panelPhongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPhongLayout.createSequentialGroup()
                .addComponent(lblPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelPhongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFdMaPhong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblMaPhong))
                .addGap(20, 20, 20)
                .addGroup(panelPhongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFdTenPhong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTenPhong))
                .addGap(21, 21, 21)
                .addGroup(panelPhongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblLoaiPhong)
                    .addComponent(cbxLoaiPhong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelPhongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFdGia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblGia))
                .addGap(18, 18, 18)
                .addGroup(panelPhongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFdGhiChu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblGhiChu))
                .addGap(18, 18, 18)
                .addGroup(panelPhongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLamMoiPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnThemPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(panelPhongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnXoaPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCapNhatPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelDSLoaiPhong.setBackground(new java.awt.Color(204, 255, 255));

        lblDSLoaiPhong.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lblDSLoaiPhong.setForeground(new java.awt.Color(0, 0, 102));
        lblDSLoaiPhong.setText("DANH SÁCH LOẠI PHÒNG");
        
     // Model DSLP
        modelDSLP = new DefaultTableModel(colsLoaiPhong,0);
        tblLoaiPhong = new JTable(modelDSLP);
        scrollPaneDSLoaiPhong.setViewportView(tblLoaiPhong);
        
        // Sự kiện click trên tblDSNV
        ListSelectionModel listSelectionModelDSLP = tblLoaiPhong.getSelectionModel();
        // Thiết lập chỉ click được 1 dòng
        listSelectionModelDSLP.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        // Xử lý sự kiện click
        listSelectionModelDSLP.addListSelectionListener(new ListSelectionListener() {
			
			@Override
			public void valueChanged(ListSelectionEvent e) {
				// TODO Auto-generated method stub
				hienThiChiTietLP();
			}
		});

        javax.swing.GroupLayout panelDSLoaiPhongLayout = new javax.swing.GroupLayout(panelDSLoaiPhong);
        panelDSLoaiPhong.setLayout(panelDSLoaiPhongLayout);
        panelDSLoaiPhongLayout.setHorizontalGroup(
            panelDSLoaiPhongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrollPaneDSLoaiPhong)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelDSLoaiPhongLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblDSLoaiPhong)
                .addGap(138, 138, 138))
        );
        panelDSLoaiPhongLayout.setVerticalGroup(
            panelDSLoaiPhongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelDSLoaiPhongLayout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(lblDSLoaiPhong)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollPaneDSLoaiPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
        );

        panelLoaiPhong.setBackground(new java.awt.Color(204, 255, 255));
        panelLoaiPhong.setForeground(new java.awt.Color(0, 0, 102));

        lblTTLoaiPhong.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lblTTLoaiPhong.setForeground(new java.awt.Color(0, 0, 102));
        lblTTLoaiPhong.setText("THÔNG TIN LOẠI PHÒNG");

        lblMaLoaiPhong.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblMaLoaiPhong.setForeground(new java.awt.Color(0, 0, 102));
        lblMaLoaiPhong.setText("Mã loại phòng");

        lblTenLoaiPhong.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblTenLoaiPhong.setForeground(new java.awt.Color(0, 0, 102));
        lblTenLoaiPhong.setText("Tên loại phòng");

        txtFdMaLoaiPhong.setEditable(false);
        txtFdMaLoaiPhong.setBackground(new java.awt.Color(204, 204, 204));

        txtFdTenLoaiPhong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFdTenLoaiPhongActionPerformed(evt);
            }
        });

        btnThemLoaiPhong.setBackground(new java.awt.Color(255, 255, 255));
        btnThemLoaiPhong.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnThemLoaiPhong.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/ic_add.png"))); // NOI18N
        btnThemLoaiPhong.setText("THÊM");
        btnThemLoaiPhong.setBorderPainted(false);
        btnThemLoaiPhong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemLoaiPhongActionPerformed(evt);
            }
        });

        btnXoaLoaiPhong.setBackground(new java.awt.Color(255, 255, 255));
        btnXoaLoaiPhong.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnXoaLoaiPhong.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/ic_xoa.png"))); // NOI18N
        btnXoaLoaiPhong.setText("XOÁ");
        btnXoaLoaiPhong.setBorderPainted(false);
        btnXoaLoaiPhong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaLoaiPhongActionPerformed(evt);
            }
        });

        btnCapNhatLoaiPhong.setBackground(new java.awt.Color(255, 255, 255));
        btnCapNhatLoaiPhong.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnCapNhatLoaiPhong.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/ic_refesh (1).png"))); // NOI18N
        btnCapNhatLoaiPhong.setText("CẬP NHẬT");
        btnCapNhatLoaiPhong.setBorderPainted(false);
        btnCapNhatLoaiPhong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
					btnCapNhatLoaiPhongActionPerformed(evt);
				} catch (Exception e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
            }
        });

        btnLamMoiLoaiPhong.setBackground(new java.awt.Color(255, 255, 255));
        btnLamMoiLoaiPhong.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnLamMoiLoaiPhong.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/ic_lamMoi.png"))); // NOI18N
        btnLamMoiLoaiPhong.setText("LÀM MỚI");
        btnLamMoiLoaiPhong.setBorderPainted(false);
        btnLamMoiLoaiPhong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLamMoiLoaiPhongActionPerformed(evt);
            }
        });

        lblGiaLP.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblGiaLP.setForeground(new java.awt.Color(0, 0, 102));
        lblGiaLP.setText("Giá loại phòng");

        javax.swing.GroupLayout panelLoaiPhongLayout = new javax.swing.GroupLayout(panelLoaiPhong);
        panelLoaiPhong.setLayout(panelLoaiPhongLayout);
        panelLoaiPhongLayout.setHorizontalGroup(
            panelLoaiPhongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLoaiPhongLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(panelLoaiPhongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblMaLoaiPhong)
                    .addComponent(lblTenLoaiPhong)
                    .addComponent(lblGiaLP))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelLoaiPhongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelLoaiPhongLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(txtFdMaLoaiPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(62, 62, 62))
                    .addGroup(panelLoaiPhongLayout.createSequentialGroup()
                        .addGroup(panelLoaiPhongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtFdTenLoaiPhong, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelLoaiPhongLayout.createSequentialGroup()
                                .addGroup(panelLoaiPhongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnLamMoiLoaiPhong, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnCapNhatLoaiPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(panelLoaiPhongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnThemLoaiPhong, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE)
                                    .addComponent(btnXoaLoaiPhong, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(panelLoaiPhongLayout.createSequentialGroup()
                        .addGroup(panelLoaiPhongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTTLoaiPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtGiaLP, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        panelLoaiPhongLayout.setVerticalGroup(
            panelLoaiPhongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLoaiPhongLayout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(lblTTLoaiPhong)
                .addGap(18, 18, 18)
                .addGroup(panelLoaiPhongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMaLoaiPhong)
                    .addComponent(txtFdMaLoaiPhong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelLoaiPhongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTenLoaiPhong)
                    .addComponent(txtFdTenLoaiPhong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelLoaiPhongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblGiaLP)
                    .addComponent(txtGiaLP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                .addGroup(panelLoaiPhongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThemLoaiPhong)
                    .addComponent(btnLamMoiLoaiPhong))
                .addGap(18, 18, 18)
                .addGroup(panelLoaiPhongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCapNhatLoaiPhong)
                    .addComponent(btnXoaLoaiPhong))
                .addGap(31, 31, 31))
        );

        btnTimLoaiPhong.setBackground(new java.awt.Color(255, 255, 255));
        btnTimLoaiPhong.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnTimLoaiPhong.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/ic_tim.png"))); // NOI18N
        btnTimLoaiPhong.setText("TÌM");
        btnTimLoaiPhong.setBorderPainted(false);
        btnTimLoaiPhong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimLoaiPhongActionPerformed(evt);
            }
        });

        txtTimLoaiPhong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTimLoaiPhongActionPerformed(evt);
            }
        });

        btnLamMoiDSP.setBackground(new java.awt.Color(255, 255, 255));
        btnLamMoiDSP.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/ic_refesh (1).png"))); // NOI18N
        btnLamMoiDSP.setBorderPainted(false);
        btnLamMoiDSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLamMoiDSPActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/ic_refesh (1).png"))); // NOI18N
        jButton1.setBorderPainted(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLamMoiDSLPActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelLonLayout = new javax.swing.GroupLayout(panelLon);
        panelLon.setLayout(panelLonLayout);
        panelLonLayout.setHorizontalGroup(
            panelLonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLonLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelLonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelLonLayout.createSequentialGroup()
                        .addGroup(panelLonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelLonLayout.createSequentialGroup()
                                .addGap(0, 1, Short.MAX_VALUE)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtTimLoaiPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnTimLoaiPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelLonLayout.createSequentialGroup()
                                .addComponent(btnLamMoiDSP, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtTimPhong)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnTimPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(panelDSLoaiPhong, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(panelDSPhong, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelLonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(panelPhong, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(panelLoaiPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 434, Short.MAX_VALUE))
                        .addGap(12, 12, 12))
                    .addGroup(panelLonLayout.createSequentialGroup()
                        .addComponent(btnQuayLai, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblPhongHat)
                        .addGap(393, 393, 393))))
        );
        panelLonLayout.setVerticalGroup(
            panelLonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLonLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelLonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnQuayLai, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPhongHat, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(panelLonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelLonLayout.createSequentialGroup()
                        .addGroup(panelLonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnTimPhong, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtTimPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnLamMoiDSP, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(panelLonLayout.createSequentialGroup()
                        .addGroup(panelLonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(panelPhong, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelLonLayout.createSequentialGroup()
                                .addGap(42, 42, 42)
                                .addComponent(panelDSPhong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(panelLonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelLoaiPhong, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(panelLonLayout.createSequentialGroup()
                        .addGroup(panelLonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(panelLonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtTimLoaiPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnTimLoaiPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(panelDSLoaiPhong, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout panelVienLayout = new javax.swing.GroupLayout(panelVien);
        panelVien.setLayout(panelVienLayout);
        panelVienLayout.setHorizontalGroup(
            panelVienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelVienLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelLon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelVienLayout.setVerticalGroup(
            panelVienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelVienLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelLon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelVien, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelVien, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
        
        loadCBXLoaiPhong();
        
        setGiaTriMacDinhPhong();
        setGiaTriMacDinhLP();
        
        DocDuLieuDatabaseVaoDSPhong();
        DocDuLieuDatabaseVaoDSLoaiPhong();
        
        
    }// </editor-fold>//GEN-END:initComponents
    
    public void DocDuLieuDatabaseVaoDSPhong() {
    	ArrayList<Phong> listPhong = DAO_Phong.getAllPhong();
    	for (Phong p : listPhong) {
    		modelDSP.addRow(new Object[] {
    				p.getMaPhong(),p.getTenPhong(),
    				getTenLoaiPhong(p.getLoaiPhong().getMaLP()),
    				p.isTinhTrang()?"Đang sử dụng":"Còn trống",
    				p.getGhiChu()});}
        }
    
    public void DocDuLieuDatabaseVaoDSLoaiPhong() {
    	ArrayList<LoaiPhong> listLP = DAO_LoaiPhong.getAllLoaiPhong();
    	for (LoaiPhong lp : listLP) {
    		modelDSLP.addRow(new Object[] {
    				lp.getMaLP(),lp.getTenLP(),
    				getGiaLP(lp.getMaLP())});}
    }
    
    public boolean kiemTraDuLieuPhong() {
		String tenDV=txtFdTenPhong.getText().trim();
		
		if (tenDV.trim().length() > 0) {
			if (!(tenDV.matches("[^.\\/\\_\\+\\?\\#\\%\\@\\!\\$\\^\\&\\*\\(\\)]+"))) {
				JOptionPane.showMessageDialog(this, "Tên phòng không chứa ký tự đặc biệt");
				return false;
			}
		} else {
			JOptionPane.showMessageDialog(this, "Tên phòng không được để trống");
			return false;
		}
		
		return true;
    }
    
    public boolean kiemTraDuLieuLP() {
		String tenDV=txtFdTenLoaiPhong.getText().trim();
		double giaDV = 0;
		String gia = Double.toString(giaDV);
		gia = txtGiaLP.getText().trim();
		if (tenDV.trim().length() > 0) {
			if (!(tenDV.matches("[^.\\/\\_\\+\\?\\#\\%\\@\\!\\$\\^\\&\\*\\(\\)]+"))) {
				JOptionPane.showMessageDialog(this, "Tên Loại phòng không chứa ký tự đặc biệt");
				return false;
			}
		} else {
			JOptionPane.showMessageDialog(this, "Tên loại phòng không được để trống");
			return false;
		}
		if (gia.trim().length()>0) {
			if (!(gia.matches("^[1-9]([0-9]{3,})"))) {
				JOptionPane.showMessageDialog(this, "Giá loại phòng phải là số và không nhỏ hơn 1000!");
				return false;
			}
		} else {
			JOptionPane.showMessageDialog(this, "Giá loại phòng không được để trống");
			return false;
		}
		return true;
    }
    
    public String getTenLoaiPhong(String maLP) {
    	ArrayList<LoaiPhong> listLP = DAO_LoaiPhong.getAllLoaiPhong();
    	for (LoaiPhong lp : listLP) {
    		if(lp.getMaLP().equalsIgnoreCase(maLP))
    			return lp.getTenLP();
    	}
    	return "";
    }
    
    public String getGiaLP(String maLP) {
    	ArrayList<LoaiPhong> listLP = DAO_LoaiPhong.getAllLoaiPhong();
    	for (LoaiPhong lp : listLP) {
    		if(lp.getMaLP().equalsIgnoreCase(maLP)) {
    			Locale localeVN = new Locale("vi", "VN");
    		    NumberFormat currencyVN = NumberFormat.getCurrencyInstance(localeVN);
    		    String giaLP = currencyVN.format(lp.getGiaLP());
//    			BigDecimal giaLP = new BigDecimal(lp.getGiaLP()).setScale(0, BigDecimal.ROUND_HALF_UP);
    			return giaLP;
    		}
    	}
    	return "";
    }
    
    public void setGiaTriMacDinhPhong() {
    	txtFdMaPhong.setText(maPhongMoi());
    	txtFdTenPhong.setText("");
    	txtFdGia.setText(getGiaTheoTenLP(cbxLoaiPhong.getSelectedItem()+""));
    	cbxLoaiPhong.setSelectedIndex(1);
    	txtFdGhiChu.setText("");
    }
    
    public void setGiaTriMacDinhLP() {
    	txtFdMaLoaiPhong.setText(maLoaiPhongMoi());
    	txtFdTenLoaiPhong.setText("");
    	txtGiaLP.setText("");
    }
    
    public String getGiaTheoTenLP(String tenLP) {
    	ArrayList<LoaiPhong> listLP = DAO_LoaiPhong.getAllLoaiPhong();
    	for (LoaiPhong lp : listLP) {
    		if(lp.getTenLP().equalsIgnoreCase(tenLP)) {
    			Locale localeVN = new Locale("vi", "VN");
    		    NumberFormat currencyVN = NumberFormat.getCurrencyInstance(localeVN);
    		    String giaLP = currencyVN.format(lp.getGiaLP());
//    			BigDecimal giaLP = new BigDecimal(lp.getGiaLP()).setScale(0, BigDecimal.ROUND_HALF_UP);
    			return giaLP;
    		}
    	}
    	return "";
    }
    
    public String maPhongMoi() {
    	ArrayList<Phong> listPhong = DAO_Phong.getAllPhong();
    	String ma = listPhong.get(listPhong.size()-1).getMaPhong().substring(2);
    	
    	int i = Integer.parseInt(ma) + 1;
    	
    	if(i<10)
    		ma = "00" + i;
    	else if(i>=10 && i<=99)
    		ma = "0" + i;
    	else if(i>=100)
    		ma = i+"";
    	return "PH"+ma;
    }
    
    public String maLoaiPhongMoi() {
    	ArrayList<LoaiPhong> listLoaiPhong = DAO_LoaiPhong.getAllLoaiPhong();
    	String ma = listLoaiPhong.get(listLoaiPhong.size()-1).getMaLP().substring(2);
    	
    	int i = Integer.parseInt(ma) + 1;
    	
    	if(i<10)
    		ma = "00" + i;
    	else if(i>=10 && i<=99)
    		ma = "0" + i;
    	else if(i>=100)
    		ma = i+"";
    	return "LP"+ma;
    }
    
    public void loadCBXLoaiPhong() {
    	cbxLoaiPhong.removeAllItems();
    	ArrayList<LoaiPhong> listLP = DAO_LoaiPhong.getAllLoaiPhong();
    	for (LoaiPhong lp : listLP) {
			cbxLoaiPhong.addItem(lp.getTenLP());
		}
    }
    
    public String layMaLPTheoTen(String tenLP) {
    	ArrayList<LoaiPhong> listLP = DAO_LoaiPhong.getAllLoaiPhong();
    	for (LoaiPhong lp : listLP) {
			if(tenLP.equalsIgnoreCase(lp.getTenLP()))
				return lp.getMaLP();
		}
    	return "";
    }
    
    public String layGiaLPTheoTen(String tenLP) {
    	ArrayList<LoaiPhong> listLP = DAO_LoaiPhong.getAllLoaiPhong();
    	for (LoaiPhong lp : listLP) {
			if(tenLP.equalsIgnoreCase(lp.getTenLP()))
				return lp.getGiaLP()+"";
		}
    	return "";
    }
    
    public void hienThiChiTietPhong() {
    	int[] rows = tblDSPhong.getSelectedRows();
		
		txtFdMaPhong.setText(String.valueOf(tblDSPhong.getValueAt(rows[0], 0)));
		txtFdTenPhong.setText(String.valueOf(tblDSPhong.getValueAt(rows[0], 1)));
		cbxLoaiPhong.setSelectedItem(String.valueOf(tblDSPhong.getValueAt(rows[0], 2)));
		txtFdGhiChu.setText(String.valueOf(tblDSPhong.getValueAt(rows[0], 4)));
    }
    
    public void hienThiChiTietLP() {
    	int[] rows = tblLoaiPhong.getSelectedRows();
		
		txtFdMaLoaiPhong.setText(String.valueOf(tblLoaiPhong.getValueAt(rows[0], 0)));
		txtFdTenLoaiPhong.setText(String.valueOf(tblLoaiPhong.getValueAt(rows[0], 1)));
		txtGiaLP.setText(String.valueOf(tblLoaiPhong.getValueAt(rows[0], 2)));
    }
    
    public void taiLaiDSPhong() {
    	modelDSP.setRowCount(0);
    	DocDuLieuDatabaseVaoDSPhong();
    	setGiaTriMacDinhPhong();
    	txtTimPhong.setText("");
    }
    
    public void taiLaiDSLP() {
    	modelDSLP.setRowCount(0);
    	DocDuLieuDatabaseVaoDSLoaiPhong();
    	setGiaTriMacDinhLP();
    	txtTimLoaiPhong.setText("");
    }
    
    public boolean themPhong() throws ParseException {
    	String maPhong, tenPhong, ghiChu, maLP, loaiPhong;
    	
    	if(kiemTraDuLieuPhong()) {
    		maPhong = txtFdMaPhong.getText();
        	tenPhong = txtFdTenPhong.getText();
        	loaiPhong = cbxLoaiPhong.getSelectedItem()+"";
        	maLP = layMaLPTheoTen(loaiPhong);
        	ghiChu = txtFdGhiChu.getText();
        	
        	Phong p = new Phong(maPhong, tenPhong, new LoaiPhong(maLP), false, ghiChu);
        	if(!DAO_Phong.themPhong(p))
        		return false;
        	JOptionPane.showMessageDialog(rootPane, "Thêm phòng thành công!");
    	}
    	return true;
    }
    
    public boolean themLP() {
    	String maLP, tenLP;
    	double giaLP;
    	
    	if(kiemTraDuLieuLP()) {
    		maLP = txtFdMaLoaiPhong.getText();
        	tenLP = txtFdTenLoaiPhong.getText();
        	giaLP = Double.parseDouble(txtGiaLP.getText());
        	
        	LoaiPhong lp = new LoaiPhong(maLP, tenLP, giaLP);
        	if(!DAO_LoaiPhong.themLP(lp))
        		return false;
        	JOptionPane.showMessageDialog(rootPane, "Thêm loại phòng thành công!");
    	}
    	return true;
    }
    
    public boolean xoaPhong() {
    	
    	int result = JOptionPane.showConfirmDialog(rootPane,
                "Bạn có chắc muốn xóa phòng này!",
                "Xác nhận",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.WARNING_MESSAGE);
        if (result == JOptionPane.YES_OPTION) {
        	DAO_Phong.xoaPhong(txtFdMaPhong.getText());
        	JOptionPane.showMessageDialog(rootPane, "Xóa phòng thành công!");
        	return true;
        } else if (result == JOptionPane.NO_OPTION) {
        	JOptionPane.showMessageDialog(rootPane, "Đã hủy thao tác xóa!");
        }
        return false;
    }
    
	public boolean xoaLP() {
    	
    	int result = JOptionPane.showConfirmDialog(rootPane,
                "Bạn có chắc muốn xóa loại phòng này!",
                "Xác nhận",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.WARNING_MESSAGE);
        if (result == JOptionPane.YES_OPTION) {
        	DAO_LoaiPhong.xoaLP(txtFdMaLoaiPhong.getText());
        	JOptionPane.showMessageDialog(rootPane, "Xóa loại phòng thành công!");
        	return true;
        } else if (result == JOptionPane.NO_OPTION) {
        	JOptionPane.showMessageDialog(rootPane, "Đã hủy thao tác xóa!");
        }
        return false;
    }
	
	public boolean capNhatPhong() throws Exception {
    	String maPhong, tenPhong, loaiPhong, maLP, ghiChu;
    	
    	maPhong = txtFdMaPhong.getText();
    	tenPhong = txtFdTenPhong.getText();
    	loaiPhong = cbxLoaiPhong.getSelectedItem()+"";
    	maLP = layMaLPTheoTen(loaiPhong);
    	ghiChu = txtFdGhiChu.getText();
    	
    	Phong p = new Phong(maPhong, tenPhong, new LoaiPhong(maLP), false, ghiChu);
    	if(!DAO_Phong.capNhatPhong(p)) {
    		JOptionPane.showMessageDialog(rootPane, "Cập nhật không thành công!");
    		return false;
    	}
    	JOptionPane.showMessageDialog(rootPane, "Cập nhật thành công!");
    	return true;
    }
    
    public boolean capNhatLP() throws Exception {
    	String maLP, tenLP;
    	double giaLP;
    	
    	maLP = txtFdMaLoaiPhong.getText();
    	tenLP = txtFdTenLoaiPhong.getText();
    	giaLP = Double.parseDouble(txtGiaLP.getText());
    	
    	LoaiPhong lp = new LoaiPhong(maLP, tenLP, giaLP);
    	if(!DAO_LoaiPhong.capNhatLP(lp)) {
    		JOptionPane.showMessageDialog(rootPane, "Cập nhật không thành công!");
    		return false;
    	}
    	JOptionPane.showMessageDialog(rootPane, "Cập nhật thành công!");
    	return true;
    }
    
    public void timPhong(String ten) {
		ArrayList<Phong> listPhong = DAO_Phong.timPhong(ten);
		for (Phong p : listPhong) {
			modelDSP.addRow(new Object[] {
    				p.getMaPhong(),p.getTenPhong(),
    				getTenLoaiPhong(p.getLoaiPhong().getMaLP()),
    				p.isTinhTrang()?"Đang sử dụng":"Còn trống",
    				p.getGhiChu()});}
    }
    
    public void timLP(String ten) {
		ArrayList<LoaiPhong> listLP = DAO_LoaiPhong.timLP(ten);
		for (LoaiPhong lp : listLP) {
    		modelDSLP.addRow(new Object[] {
    				lp.getMaLP(),lp.getTenLP(),
    				getGiaLP(lp.getMaLP())});}
    }

    private void btnTimPhongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimPhongActionPerformed
        // TODO add your handling code here:
    	String ten = txtTimPhong.getText().replaceAll("\\s\\s+", " ").trim();
    	modelDSP.setRowCount(0);
    	timPhong(ten);
    	setGiaTriMacDinhPhong();
    }//GEN-LAST:event_btnTimPhongActionPerformed

    private void txtFdGhiChuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFdGhiChuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFdGhiChuActionPerformed

    private void btnQuayLaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuayLaiActionPerformed
        // TODO add your handling code here:
        GD_Chinh ui = new GD_Chinh();
        this.setVisible(false);
        ui.setVisible(true);
    }//GEN-LAST:event_btnQuayLaiActionPerformed

    private void btnTimLoaiPhongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimLoaiPhongActionPerformed
        // TODO add your handling code here:
    	String ten = txtTimLoaiPhong.getText().replaceAll("\\s\\s+", " ").trim();
    	modelDSLP.setRowCount(0);
    	timLP(ten);
    	setGiaTriMacDinhLP();
    }//GEN-LAST:event_btnTimLoaiPhongActionPerformed

    private void btnThemLoaiPhongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemLoaiPhongActionPerformed
        // TODO add your handling code here:
    	themLP();
    	loadCBXLoaiPhong();
    }//GEN-LAST:event_btnThemLoaiPhongActionPerformed

    private void txtFdTenLoaiPhongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFdTenLoaiPhongActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFdTenLoaiPhongActionPerformed

    private void txtFdGiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFdGiaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFdGiaActionPerformed

    private void txtTimLoaiPhongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTimLoaiPhongActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTimLoaiPhongActionPerformed

    private void btnLamMoiDSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLamMoiDSPActionPerformed
        // TODO add your handling code here:
    	taiLaiDSPhong();
    }//GEN-LAST:event_btnLamMoiDSPActionPerformed

    private void btnLamMoiDSLPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    	taiLaiDSLP();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnLamMoiPhongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLamMoiPhongActionPerformed
        // TODO add your handling code here:
    	setGiaTriMacDinhPhong();
    }//GEN-LAST:event_btnLamMoiPhongActionPerformed

    private void btnThemPhongActionPerformed(java.awt.event.ActionEvent evt) throws ParseException {//GEN-FIRST:event_btnThemPhongActionPerformed
        // TODO add your handling code here:
    	themPhong();
    }//GEN-LAST:event_btnThemPhongActionPerformed

    private void btnCapNhatPhongActionPerformed(java.awt.event.ActionEvent evt) throws Exception {//GEN-FIRST:event_btnCapNhatPhongActionPerformed
        // TODO add your handling code here:
    	capNhatPhong();
    }//GEN-LAST:event_btnCapNhatPhongActionPerformed

    private void btnXoaPhongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaPhongActionPerformed
        // TODO add your handling code here:
    	xoaPhong();
    }//GEN-LAST:event_btnXoaPhongActionPerformed

    private void btnLamMoiLoaiPhongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLamMoiLoaiPhongActionPerformed
        // TODO add your handling code here:
    	setGiaTriMacDinhLP();
    }//GEN-LAST:event_btnLamMoiLoaiPhongActionPerformed

    private void btnCapNhatLoaiPhongActionPerformed(java.awt.event.ActionEvent evt) throws Exception {//GEN-FIRST:event_btnCapNhatLoaiPhongActionPerformed
        // TODO add your handling code here:
    	capNhatLP();
    }//GEN-LAST:event_btnCapNhatLoaiPhongActionPerformed

    private void btnXoaLoaiPhongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaLoaiPhongActionPerformed
        // TODO add your handling code here:
    	xoaLP();
    	loadCBXLoaiPhong();
    }//GEN-LAST:event_btnXoaLoaiPhongActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GD_PhongHat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GD_PhongHat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GD_PhongHat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GD_PhongHat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GD_PhongHat().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCapNhatLoaiPhong;
    private javax.swing.JButton btnCapNhatPhong;
    private javax.swing.JButton btnLamMoiDSP;
    private javax.swing.JButton btnLamMoiLoaiPhong;
    private javax.swing.JButton btnLamMoiPhong;
    private javax.swing.JButton btnQuayLai;
    private javax.swing.JButton btnThemLoaiPhong;
    private javax.swing.JButton btnThemPhong;
    private javax.swing.JButton btnTimLoaiPhong;
    private javax.swing.JButton btnTimPhong;
    private javax.swing.JButton btnXoaLoaiPhong;
    private javax.swing.JButton btnXoaPhong;
    private javax.swing.JComboBox<String> cbxLoaiPhong;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel lblDSLoaiPhong;
    private javax.swing.JLabel lblDSPhong;
    private javax.swing.JLabel lblGhiChu;
    private javax.swing.JLabel lblGia;
    private javax.swing.JLabel lblGiaLP;
    private javax.swing.JLabel lblLoaiPhong;
    private javax.swing.JLabel lblMaLoaiPhong;
    private javax.swing.JLabel lblMaPhong;
    private javax.swing.JLabel lblPhong;
    private javax.swing.JLabel lblPhongHat;
    private javax.swing.JLabel lblTTLoaiPhong;
    private javax.swing.JLabel lblTenLoaiPhong;
    private javax.swing.JLabel lblTenPhong;
    private javax.swing.JPanel panelDSLoaiPhong;
    private javax.swing.JPanel panelDSPhong;
    private javax.swing.JPanel panelLoaiPhong;
    private javax.swing.JPanel panelLon;
    private javax.swing.JPanel panelPhong;
    private javax.swing.JPanel panelVien;
    private javax.swing.JScrollPane scrollPaneDSLoaiPhong;
    private javax.swing.JScrollPane scrollPaneDSPhong;
    private javax.swing.JTable tblDSPhong;
    private javax.swing.JTable tblLoaiPhong;
    private javax.swing.JTextField txtFdGhiChu;
    private javax.swing.JTextField txtFdGia;
    private javax.swing.JTextField txtFdMaLoaiPhong;
    private javax.swing.JTextField txtFdMaPhong;
    private javax.swing.JTextField txtFdTenLoaiPhong;
    private javax.swing.JTextField txtFdTenPhong;
    private javax.swing.JTextField txtGiaLP;
    private javax.swing.JTextField txtTimLoaiPhong;
    private javax.swing.JTextField txtTimPhong;
    // End of variables declaration//GEN-END:variables
}
