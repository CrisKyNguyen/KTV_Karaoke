/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GD;

import java.sql.Date;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;

import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

import dao.DAO_ChucVu;
import dao.DAO_NhanVien;
import entity.ChucVu;
import entity.NhanVien;

/**
 *
 * @author ngphu
 */
public class GD_NhanVien extends javax.swing.JFrame {
    /**
	 * 
	 */
	private static final long serialVersionUID = 1L;


	public GD_NhanVien() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    private DefaultTableModel modelDSNV, modelDSCV;
    private String[] colsNhanVien={"Mã NV", "Tên nhân viên", "Giới tính", "Chức vụ",
    		"Ngày sinh", "Số CMND", "Số điện thoại"};
    private String[] colsChucVu={"Mã chức vụ", "Tên chức vụ"};
    
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlMain = new javax.swing.JPanel();
        pnlOuter = new javax.swing.JPanel();
        btnQuayLai = new javax.swing.JButton();
        lblTieuDe = new javax.swing.JLabel();
        pnlNV = new javax.swing.JPanel();
        lblTTNV = new javax.swing.JLabel();
        lblTenNV = new javax.swing.JLabel();
        lblNgaySinh = new javax.swing.JLabel();
        lblGioiTinh = new javax.swing.JLabel();
        lblChucVu = new javax.swing.JLabel();
        lblNgayVaoLam = new javax.swing.JLabel();
        lblCMND = new javax.swing.JLabel();
        lblSDT = new javax.swing.JLabel();
        lblMatKhau = new javax.swing.JLabel();
        txtTenNV = new javax.swing.JTextField();
        txtNgaySinh = new javax.swing.JTextField();
        cbxGioiTinh = new javax.swing.JComboBox<>();
        cbxChucVu = new javax.swing.JComboBox<>();
        txtNgayVaoLam = new javax.swing.JTextField();
        txtCMND = new javax.swing.JTextField();
        txtSDT = new javax.swing.JTextField();
        txtMatKhau = new javax.swing.JTextField();
        btnLamMoi = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnThem = new javax.swing.JButton();
        btnCapNhat = new javax.swing.JButton();
        lblMaNV = new javax.swing.JLabel();
        txtMaNV = new javax.swing.JTextField();
        pblTTNV = new javax.swing.JPanel();
        lblTTCV = new javax.swing.JLabel();
        lblTenCV = new javax.swing.JLabel();
        txtTenCV = new javax.swing.JTextField();
        btnLamMoiCV = new javax.swing.JButton();
        btnThemCV = new javax.swing.JButton();
        btnCapNhatCV = new javax.swing.JButton();
        btnXoaCV = new javax.swing.JButton();
        lblmaCV = new javax.swing.JLabel();
        txtMaCV = new javax.swing.JTextField();
        pnlDSNV = new javax.swing.JPanel();
        scrollDSNV = new javax.swing.JScrollPane();
        tblDSNV = new javax.swing.JTable();
        lblDSNV = new javax.swing.JLabel();
        pnlDSCV = new javax.swing.JPanel();
        scrollDSCV = new javax.swing.JScrollPane();
        tblDSCV = new javax.swing.JTable();
        lblDSCV = new javax.swing.JLabel();
        btnTimNV = new javax.swing.JButton();
        btnTimCV = new javax.swing.JButton();
        txtTim = new javax.swing.JTextField();
        btnRefeshNV = new javax.swing.JButton();
        btnRefeshCV = new javax.swing.JButton();
        txtTimCV = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        setSize(new java.awt.Dimension(1000, 800));

        pnlMain.setBackground(new java.awt.Color(204, 255, 255));

        pnlOuter.setBackground(new java.awt.Color(0, 204, 255));

        btnQuayLai.setBackground(new java.awt.Color(255, 255, 255));
        btnQuayLai.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnQuayLai.setText("QUAY LẠI");
        btnQuayLai.setBorderPainted(false);
        btnQuayLai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuayLaiActionPerformed(evt);
            }
        });

        lblTieuDe.setFont(new java.awt.Font("Tahoma", 1, 30)); // NOI18N
        lblTieuDe.setForeground(new java.awt.Color(0, 0, 102));
        lblTieuDe.setText("NHÂN VIÊN");

        pnlNV.setBackground(new java.awt.Color(204, 255, 255));
        pnlNV.setForeground(new java.awt.Color(0, 0, 102));

        lblTTNV.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        lblTTNV.setForeground(new java.awt.Color(0, 0, 102));
        lblTTNV.setText("THÔNG TIN NHÂN VIÊN");

        lblTenNV.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblTenNV.setForeground(new java.awt.Color(0, 0, 102));
        lblTenNV.setText("Tên nhân viên");

        lblNgaySinh.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblNgaySinh.setForeground(new java.awt.Color(0, 0, 102));
        lblNgaySinh.setText("Ngày sinh");

        lblGioiTinh.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblGioiTinh.setForeground(new java.awt.Color(0, 0, 102));
        lblGioiTinh.setText("Giới tính");

        lblChucVu.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblChucVu.setForeground(new java.awt.Color(0, 0, 102));
        lblChucVu.setText("Chức vụ");

        lblNgayVaoLam.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblNgayVaoLam.setForeground(new java.awt.Color(0, 0, 102));
        lblNgayVaoLam.setText("Ngày vào làm");

        lblCMND.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblCMND.setForeground(new java.awt.Color(0, 0, 102));
        lblCMND.setText("Số CMND");

        lblSDT.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblSDT.setForeground(new java.awt.Color(0, 0, 102));
        lblSDT.setText("Số ĐT");

        lblMatKhau.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblMatKhau.setForeground(new java.awt.Color(0, 0, 102));
        lblMatKhau.setText("Mật khẩu");

        txtTenNV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTenNVActionPerformed(evt);
            }
        });

        cbxGioiTinh.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nam", "Nữ" }));

//      cbxChucVu.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        txtNgayVaoLam.setEditable(false);
        txtNgayVaoLam.setBackground(new java.awt.Color(204, 204, 204));

        btnLamMoi.setBackground(new java.awt.Color(255, 255, 255));
        btnLamMoi.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnLamMoi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/ic_lamMoi_NV.png"))); // NOI18N
        btnLamMoi.setText("LÀM MỚI");
        btnLamMoi.setBorderPainted(false);
        btnLamMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLamMoiActionPerformed(evt);
            }
        });

        btnXoa.setBackground(new java.awt.Color(255, 255, 255));
        btnXoa.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/ic_xoa_NV.png"))); // NOI18N
        btnXoa.setText("XOÁ");
        btnXoa.setBorderPainted(false);
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnThem.setBackground(new java.awt.Color(255, 255, 255));
        btnThem.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/ic_add_NV.png"))); // NOI18N
        btnThem.setText("THÊM");
        btnThem.setBorderPainted(false);
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
					btnThemActionPerformed(evt);
				} catch (ParseException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
            }
        });

        btnCapNhat.setBackground(new java.awt.Color(255, 255, 255));
        btnCapNhat.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnCapNhat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/ic_update.png"))); // NOI18N
        btnCapNhat.setText("CẬP NHẬT");
        btnCapNhat.setBorderPainted(false);
        btnCapNhat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
					btnCapNhatActionPerformed(evt);
				} catch (Exception e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
            }
        });

        lblMaNV.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblMaNV.setForeground(new java.awt.Color(0, 0, 102));
        lblMaNV.setText("Mã nhân viên");

        txtMaNV.setEditable(false);
        txtMaNV.setBackground(new java.awt.Color(204, 204, 204));

        javax.swing.GroupLayout pnlNVLayout = new javax.swing.GroupLayout(pnlNV);
        pnlNV.setLayout(pnlNVLayout);
        pnlNVLayout.setHorizontalGroup(
            pnlNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlNVLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlNVLayout.createSequentialGroup()
                        .addGroup(pnlNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTenNV)
                            .addComponent(lblNgaySinh)
                            .addComponent(lblGioiTinh)
                            .addComponent(lblChucVu)
                            .addComponent(lblNgayVaoLam)
                            .addComponent(lblCMND)
                            .addComponent(lblSDT)
                            .addComponent(lblMatKhau)
                            .addComponent(btnLamMoi))
                        .addGroup(pnlNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(pnlNVLayout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addComponent(btnThem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnCapNhat, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlNVLayout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addGroup(pnlNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lblTTNV)
                                    .addComponent(txtTenNV)
                                    .addComponent(txtNgaySinh)
                                    .addComponent(cbxGioiTinh, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cbxChucVu, 0, 300, Short.MAX_VALUE)
                                    .addComponent(txtNgayVaoLam)
                                    .addComponent(txtCMND)
                                    .addComponent(txtSDT)
                                    .addComponent(txtMatKhau)
                                    .addComponent(txtMaNV)))))
                    .addGroup(pnlNVLayout.createSequentialGroup()
                        .addComponent(lblMaNV)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlNVLayout.setVerticalGroup(
            pnlNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlNVLayout.createSequentialGroup()
                .addComponent(lblTTNV)
                .addGap(8, 8, 8)
                .addGroup(pnlNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblMaNV)
                    .addComponent(txtMaNV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(pnlNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTenNV)
                    .addComponent(txtTenNV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(pnlNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNgaySinh)
                    .addComponent(txtNgaySinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(pnlNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblGioiTinh)
                    .addComponent(cbxGioiTinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(pnlNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblChucVu)
                    .addComponent(cbxChucVu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(pnlNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNgayVaoLam)
                    .addComponent(txtNgayVaoLam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(pnlNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCMND)
                    .addComponent(txtCMND, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(pnlNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSDT)
                    .addComponent(txtSDT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(pnlNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMatKhau)
                    .addComponent(txtMatKhau, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnXoa)
                    .addComponent(btnLamMoi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnThem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnCapNhat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pblTTNV.setBackground(new java.awt.Color(204, 255, 255));

        lblTTCV.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        lblTTCV.setForeground(new java.awt.Color(0, 0, 102));
        lblTTCV.setText("THÔNG TIN CHỨC VỤ");

        lblTenCV.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblTenCV.setForeground(new java.awt.Color(0, 0, 102));
        lblTenCV.setText("Tên chức vụ");

        btnLamMoiCV.setBackground(new java.awt.Color(255, 255, 255));
        btnLamMoiCV.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnLamMoiCV.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/ic_lamMoi_NV.png"))); // NOI18N
        btnLamMoiCV.setText("LÀM MỚI");
        btnLamMoiCV.setBorderPainted(false);
        btnLamMoiCV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLamMoiCVActionPerformed(evt);
            }
        });

        btnThemCV.setBackground(new java.awt.Color(255, 255, 255));
        btnThemCV.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnThemCV.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/ic_add_NV.png"))); // NOI18N
        btnThemCV.setText("THÊM");
        btnThemCV.setBorderPainted(false);
        btnThemCV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemCVActionPerformed(evt);
            }
        });

        btnCapNhatCV.setBackground(new java.awt.Color(255, 255, 255));
        btnCapNhatCV.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnCapNhatCV.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/ic_update.png"))); // NOI18N
        btnCapNhatCV.setText("CẬP NHẬT");
        btnCapNhatCV.setBorderPainted(false);
        btnCapNhatCV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
					btnCapNhatCVActionPerformed(evt);
				} catch (Exception e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
            }
        });

        btnXoaCV.setBackground(new java.awt.Color(255, 255, 255));
        btnXoaCV.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnXoaCV.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/ic_xoa_NV.png"))); // NOI18N
        btnXoaCV.setText("XOÁ");
        btnXoaCV.setBorderPainted(false);
        btnXoaCV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaCVActionPerformed(evt);
            }
        });

        lblmaCV.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblmaCV.setForeground(new java.awt.Color(0, 0, 102));
        lblmaCV.setText("Mã chức vụ");

        txtMaCV.setEditable(false);
        txtMaCV.setBackground(new java.awt.Color(204, 204, 204));

        javax.swing.GroupLayout pblTTNVLayout = new javax.swing.GroupLayout(pblTTNV);
        pblTTNV.setLayout(pblTTNVLayout);
        pblTTNVLayout.setHorizontalGroup(
            pblTTNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pblTTNVLayout.createSequentialGroup()
                .addContainerGap(122, Short.MAX_VALUE)
                .addComponent(lblTTCV)
                .addGap(125, 125, 125))
            .addGroup(pblTTNVLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pblTTNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pblTTNVLayout.createSequentialGroup()
                        .addComponent(btnLamMoiCV)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnThemCV, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCapNhatCV)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnXoaCV, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pblTTNVLayout.createSequentialGroup()
                        .addGroup(pblTTNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTenCV)
                            .addComponent(lblmaCV))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(pblTTNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtMaCV)
                            .addComponent(txtTenCV, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE))))
                .addContainerGap())
        );
        pblTTNVLayout.setVerticalGroup(
            pblTTNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pblTTNVLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTTCV)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pblTTNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblmaCV, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtMaCV, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pblTTNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTenCV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTenCV))
                .addGap(18, 18, 18)
                .addGroup(pblTTNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLamMoiCV)
                    .addComponent(btnThemCV)
                    .addComponent(btnCapNhatCV)
                    .addComponent(btnXoaCV))
                .addContainerGap())
        );

        pnlDSNV.setBackground(new java.awt.Color(204, 255, 255));

        lblDSNV.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lblDSNV.setForeground(new java.awt.Color(0, 0, 102));
        lblDSNV.setText("DANH SÁCH NHÂN VIÊN");
        
        // Model DSNV
        modelDSNV = new DefaultTableModel(colsNhanVien,0);
        tblDSNV = new JTable(modelDSNV);
        scrollDSNV.setViewportView(tblDSNV);
        
        // Sự kiện click trên tblDSNV
        ListSelectionModel listSelectionModelDSNV = tblDSNV.getSelectionModel();
        // Thiết lập chỉ click được 1 dòng
        listSelectionModelDSNV.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        // Xử lý sự kiện click
        listSelectionModelDSNV.addListSelectionListener(new ListSelectionListener() {
			
			@Override
			public void valueChanged(ListSelectionEvent e) {
				// TODO Auto-generated method stub
				DocDuLieuVaoTextFiedNV();
			}
		});

        javax.swing.GroupLayout pnlDSNVLayout = new javax.swing.GroupLayout(pnlDSNV);
        pnlDSNV.setLayout(pnlDSNVLayout);
        pnlDSNVLayout.setHorizontalGroup(
            pnlDSNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrollDSNV)
            .addGroup(pnlDSNVLayout.createSequentialGroup()
                .addGap(248, 248, 248)
                .addComponent(lblDSNV)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlDSNVLayout.setVerticalGroup(
            pnlDSNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDSNVLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblDSNV)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollDSNV, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
        );

        pnlDSCV.setBackground(new java.awt.Color(204, 255, 255));

        lblDSCV.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        lblDSCV.setForeground(new java.awt.Color(0, 0, 102));
        lblDSCV.setText("DANH SÁCH CHỨC VỤ");
        
        // Model DSCV
        modelDSCV = new DefaultTableModel(colsChucVu,0);
        tblDSCV = new JTable(modelDSCV);
        scrollDSCV.setViewportView(tblDSCV);
        
        // Sự kiện click trên tblDSNV
        ListSelectionModel listSelectionModelDSCV = tblDSCV.getSelectionModel();
        // Thiết lập chỉ click được 1 dòng
        listSelectionModelDSCV.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        // Xử lý sự kiện click
        listSelectionModelDSCV.addListSelectionListener(new ListSelectionListener() {
			
			@Override
			public void valueChanged(ListSelectionEvent e) {
				// TODO Auto-generated method stub
				hienThiChiTietCV();
			}
		});

        javax.swing.GroupLayout pnlDSCVLayout = new javax.swing.GroupLayout(pnlDSCV);
        pnlDSCV.setLayout(pnlDSCVLayout);
        pnlDSCVLayout.setHorizontalGroup(
            pnlDSCVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrollDSCV, javax.swing.GroupLayout.DEFAULT_SIZE, 685, Short.MAX_VALUE)
            .addGroup(pnlDSCVLayout.createSequentialGroup()
                .addGap(259, 259, 259)
                .addComponent(lblDSCV)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlDSCVLayout.setVerticalGroup(
            pnlDSCVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDSCVLayout.createSequentialGroup()
                .addComponent(lblDSCV)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollDSCV, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE))
        );

        btnTimNV.setBackground(new java.awt.Color(255, 255, 255));
        btnTimNV.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnTimNV.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/ic_tim.png"))); // NOI18N
        btnTimNV.setText("TÌM");
        btnTimNV.setBorderPainted(false);
        btnTimNV.setFocusPainted(false);
        btnTimNV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimNVActionPerformed(evt);
            }
        });

        btnTimCV.setBackground(new java.awt.Color(255, 255, 255));
        btnTimCV.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnTimCV.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/ic_tim.png"))); // NOI18N
        btnTimCV.setText("TÌM");
        btnTimCV.setBorderPainted(false);
        btnTimCV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimCVActionPerformed(evt);
            }
        });

        btnRefeshNV.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/ic_refesh (1).png"))); // NOI18N
        btnRefeshNV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefeshNVActionPerformed(evt);
            }
        });

        btnRefeshCV.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/ic_refesh (1).png"))); // NOI18N
        btnRefeshCV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefeshCVActionPerformed(evt);
            }
        });

        txtTimCV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTimCVActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlOuterLayout = new javax.swing.GroupLayout(pnlOuter);
        pnlOuter.setLayout(pnlOuterLayout);
        pnlOuterLayout.setHorizontalGroup(
            pnlOuterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlOuterLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlOuterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlOuterLayout.createSequentialGroup()
                        .addComponent(btnQuayLai, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(401, 401, 401)
                        .addComponent(lblTieuDe)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(pnlOuterLayout.createSequentialGroup()
                        .addGroup(pnlOuterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(pblTTNV, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(pnlNV, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlOuterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pnlDSNV, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(pnlDSCV, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlOuterLayout.createSequentialGroup()
                                .addComponent(btnRefeshNV, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtTim)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnTimNV))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlOuterLayout.createSequentialGroup()
                                .addComponent(btnRefeshCV, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtTimCV)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnTimCV)))))
                .addContainerGap())
        );
        pnlOuterLayout.setVerticalGroup(
            pnlOuterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlOuterLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlOuterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnQuayLai, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTieuDe))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlOuterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlOuterLayout.createSequentialGroup()
                        .addGroup(pnlOuterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnTimNV, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnRefeshNV, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtTim))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(pnlDSNV, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(pnlNV, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlOuterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnlOuterLayout.createSequentialGroup()
                        .addGroup(pnlOuterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtTimCV, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnRefeshCV, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnTimCV, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnlDSCV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(pblTTNV, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout pnlMainLayout = new javax.swing.GroupLayout(pnlMain);
        pnlMain.setLayout(pnlMainLayout);
        pnlMainLayout.setHorizontalGroup(
            pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMainLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlOuter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlMainLayout.setVerticalGroup(
            pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMainLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlOuter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
        
        setGiaTriMacDinhNV();
        setGiaTriMacDinhCV();
        loadCBXChucVu();
        
        DocDuLieuDatabaseVaoDSNhanVien();
        DocDuLieuDatabaseVaoDSChucVu();
        
    }// </editor-fold>//GEN-END:initComponents
    
    public void setGiaTriMacDinhNV() {
    	LocalDate ngayHienTai = LocalDate.now();
    	
    	txtMaNV.setText(maNhanVienMoi());
    	txtTenNV.setText("");
    	txtNgaySinh.setText("");
    	cbxGioiTinh.setSelectedIndex(0);
    	cbxChucVu.setSelectedItem(0);
    	txtNgayVaoLam.setText(ngayHienTai.format(DateTimeFormatter.ofPattern("dd-MM-yyyy")));
    	txtCMND.setText("");
    	txtSDT.setText("");
    	txtMatKhau.setText("");
    }
    
    public void setGiaTriMacDinhCV() {
    	txtMaCV.setText(maChucVuMoi());
    	txtTenCV.setText("");
    }
    
    public void DocDuLieuDatabaseVaoDSNhanVien() {
    	ArrayList<NhanVien> listNhanVien = DAO_NhanVien.getAllNhanVien();
    	modelDSNV.setRowCount(0);
    	for (NhanVien nv : listNhanVien) {
    		modelDSNV.addRow(new Object[] {
    				nv.getMaNV(),nv.getTenNV(),nv.getGioiTinh(),getTenChucVu(nv.getChucVu().getMaCV()),
    				new SimpleDateFormat("dd-MM-yyyy").format(nv.getNgaySinh()),nv.getSoCMND(),nv.getSoDT(),
    				new SimpleDateFormat("dd-MM-yyyy").format(nv.getNgayVaoLam()), nv.getMatKhau()});}
        }
    
    public void DocDuLieuDatabaseVaoDSChucVu() {
    	ArrayList<ChucVu> listChucVu = DAO_ChucVu.getAllChucVu();
    	modelDSCV.setRowCount(0);
    	for (ChucVu cv : listChucVu) {
    		modelDSCV.addRow(new Object[] {
    				cv.getMaCV(),cv.getTenCV()});}
    }
    
    public boolean kiemTraDuLieu() {
		String tenKH=txtTenNV.getText().trim();
		String ngaySinh=txtNgaySinh.getText().trim();
		String soCMND = txtCMND.getText().trim();
		String soDT = txtSDT.getText().trim();
		String matKhau = txtMatKhau.getText().trim();
		if (tenKH.trim().length() > 0) {
			if (!(tenKH.matches("[^.\\-\\/\\_\\+\\@\\!\\$\\^\\&\\*\\(\\)\\d]+"))) {
				JOptionPane.showMessageDialog(this, "Tên nhân viên không chứa số và ký tự đặc biệt");
				return false;
			}
		} else {
			JOptionPane.showMessageDialog(this, "Tên nhân viên không được để trống");
			return false;
		}
		
		if (ngaySinh.trim().length() > 0) {
			if (!(ngaySinh.matches("\\b(0?[1-9]|[12]\\d|3[01])[\\/\\-.](0?[1-9]|[12]\\d|3[01])[\\/\\-.](\\d{2}|\\d{4})\\b"))) {
				JOptionPane.showMessageDialog(this, "Ngày sinh có định dạng dd-MM-yyyy");
				return false;
			}
		} else {
			JOptionPane.showMessageDialog(this, "Ngày sinh không được để trống");
			return false;
		}
		
		if (soCMND.trim().length() > 0) {
			if (!(soCMND.matches("[0-9]{9}")) && !(soCMND.matches("[0-9]{12}"))) {
				JOptionPane.showMessageDialog(this, "CMND phải gồm 9 hoặc 12 số");
				return false;
			}
		} else {
			JOptionPane.showMessageDialog(this, "CMND không được để trống");
			return false;
		}
		if (soDT.trim().length() > 0) {
			if (!(soDT.matches("[0-9]{10}"))) {
				JOptionPane.showMessageDialog(this, "Số điện thoại phải gồm 10 số");
				return false;
			}
		} else {
			JOptionPane.showMessageDialog(this, "Số điện thoại không được để trống");
			return false;
		}
		
		if (matKhau.trim().length() > 0) {
			if (!(matKhau.matches("[a-zA-Z0-9]+"))) {
				JOptionPane.showMessageDialog(this, "Mật khẩu được có ký tự đặc biệt");
				return false;
			}
		} else {
			JOptionPane.showMessageDialog(this, "Mật khẩu không được để trống");
			return false;
		}
		
		return true;
    }
    
    public boolean kiemTraDuLieuCV() {
  		String tenDV=txtTenCV.getText().trim();
  		
  		if (tenDV.trim().length() > 0) {
  			if (!(tenDV.matches("[^.\\/\\_\\+\\?\\#\\%\\@\\!\\$\\^\\&\\*\\(\\)\\d]+"))) {
  				JOptionPane.showMessageDialog(this, "Tên chức vụ không chứa số và ký tự đặc biệt");
  				return false;
  			}
  		} else {
  			JOptionPane.showMessageDialog(this, "Tên chức vụ không được để trống");
  			return false;
  		}
  		
  		return true;
      }
    
    public String layMaCVTheoTen(String tenCV) {
    	ArrayList<ChucVu> listCV = DAO_ChucVu.getAllChucVu();
    	for (ChucVu cv : listCV) {
			if(tenCV.equalsIgnoreCase(cv.getTenCV()))
				return cv.getMaCV();
		}
    	return "";
    }
    
    public boolean themNV() throws ParseException {
    	String maNV, tenNV, gioiTinh, ns, nvl, soCMND, soDT, matKhau, maCV, chucVu;
    	Date ngaySinh, ngayVaolam;
    	
    	if(kiemTraDuLieu()) {
    		maNV = txtMaNV.getText();
        	tenNV = txtTenNV.getText();
        	ns = txtNgaySinh.getText();
        	ngaySinh = Date.valueOf(ns.substring(6)+"-"+ns.substring(3,5)+"-"+ns.substring(0,2));
        	nvl = txtNgayVaoLam.getText();
        	ngayVaolam = Date.valueOf(nvl.substring(6)+"-"+nvl.substring(3,5)+"-"+nvl.substring(0,2));
        	gioiTinh = cbxGioiTinh.getSelectedItem()+"";
        	chucVu = cbxChucVu.getSelectedItem()+"";
        	maCV = layMaCVTheoTen(chucVu);
        	soDT = txtSDT.getText();
        	soCMND = txtCMND.getText();
        	matKhau = txtMatKhau.getText();
        	
        	NhanVien nv = new NhanVien(maNV, tenNV, gioiTinh, soDT, soCMND, ngaySinh, new ChucVu(maCV), ngayVaolam, matKhau, false);
        	if(!DAO_NhanVien.themNV(nv))
        		return false;
        	JOptionPane.showMessageDialog(rootPane, "Thêm nhân viên thành công!");
    	}
    	return true;
    }
    
    public boolean themCV() {
    	String maCV, tenCV;
    	
    	if(kiemTraDuLieuCV()) {
    		maCV = txtMaCV.getText();
        	tenCV = txtTenCV.getText();
        	
        	ChucVu cv = new ChucVu(maCV, tenCV);
        	if(!DAO_ChucVu.themCV(cv))
        		return false;
    	}
    	return true;
    }
    
    public boolean xoaNV() {
    	
    	int result = JOptionPane.showConfirmDialog(rootPane,
                "Bạn có chắc muốn xóa nhân viên này!",
                "Xác nhận",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.WARNING_MESSAGE);
        if (result == JOptionPane.YES_OPTION) {
        	DAO_NhanVien.xoaNV(txtMaNV.getText());
        	JOptionPane.showMessageDialog(rootPane, "Xóa nhân viên thành công!");
        	return true;
        } else if (result == JOptionPane.NO_OPTION) {
        	JOptionPane.showMessageDialog(rootPane, "Đã hủy thao tác xóa!");
        }
        return false;
    }
    
    public boolean xoaCV() {
    	
    	int result = JOptionPane.showConfirmDialog(rootPane,
                "Bạn có chắc muốn xóa chức vụ này!",
                "Xác nhận",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.WARNING_MESSAGE);
        if (result == JOptionPane.YES_OPTION) {
        	DAO_ChucVu.xoaCV(txtMaCV.getText());
        	JOptionPane.showMessageDialog(rootPane, "Xóa chức vụ thành công!");
        	return true;
        } else if (result == JOptionPane.NO_OPTION) {
        	JOptionPane.showMessageDialog(rootPane, "Đã hủy thao tác xóa!");
        }
        return false;
    }
    
    public String maNhanVienMoi() {
    	ArrayList<NhanVien> lstNhanVien = DAO_NhanVien.getAllNhanVien();
    	String ma = lstNhanVien.get(lstNhanVien.size()-1).getMaNV().substring(2);
    	
    	int i = Integer.parseInt(ma) + 1;
    	
    	if(i<10)
    		ma = "00" + i;
    	else if(i>=10 && i<=99)
    		ma = "0" + i;
    	else if(i>=100)
    		ma = i+"";
    	return "NV"+ma;
    }
    
    public String maChucVuMoi() {
    	ArrayList<ChucVu> lstChucVu = DAO_ChucVu.getAllChucVu();
    	String ma = lstChucVu.get(lstChucVu.size()-1).getMaCV().substring(2);
    	
    	int i = Integer.parseInt(ma) + 1;
    	
    	if(i<10)
    		ma = "00" + i;
    	else if(i>=10 && i<=99)
    		ma = "0" + i;
    	else if(i>=100)
    		ma = i+"";
    	return "CV"+ma;
    }
    
    public String getTenChucVu(String maCV) {
    	ArrayList<ChucVu> lstChucVu = DAO_ChucVu.getAllChucVu();
    	for (ChucVu cv : lstChucVu) {
    		if(cv.getMaCV().equalsIgnoreCase(maCV))
    			return cv.getTenCV();
    	}
    	return "";
    }
    
    public void taiLaiDSNV() {
    	modelDSNV.setRowCount(0);
    	DocDuLieuDatabaseVaoDSNhanVien();
    	setGiaTriMacDinhNV();
    	txtTim.setText("");
    }
    
    public void taiLaiDSCV() {
    	modelDSCV.setRowCount(0);
    	DocDuLieuDatabaseVaoDSChucVu();
    	setGiaTriMacDinhCV();
    	txtTimCV.setText("");
    }
    
    public void loadCBXChucVu() {
    	cbxChucVu.removeAllItems();
    	ArrayList<ChucVu> listCV = DAO_ChucVu.getAllChucVu();
    	for (ChucVu cv : listCV) {
			cbxChucVu.addItem(cv.getTenCV());
		}
    }
    
    public void timNV(String ten) {
		ArrayList<NhanVien> list = DAO_NhanVien.timNV(ten);
		modelDSNV.setRowCount(0);
		for (NhanVien nv : list) {
			modelDSNV.addRow(new Object[] {
    				nv.getMaNV(),nv.getTenNV(),nv.getGioiTinh(),getTenChucVu(nv.getChucVu().getMaCV()),
    				new SimpleDateFormat("dd-MM-yyyy").format(nv.getNgaySinh()),nv.getSoCMND(),nv.getSoDT(),
    				new SimpleDateFormat("dd-MM-yyyy").format(nv.getNgayVaoLam()),nv.getMatKhau()});}
    }
    
    public void timCV(String ten) {
		ArrayList<ChucVu> list = DAO_ChucVu.timCV(ten);
		modelDSCV.setRowCount(0);
		for (ChucVu cv : list) {
			modelDSCV.addRow(new Object[] {
    				cv.getMaCV(),cv.getTenCV()});}
    }
    
    public boolean capNhatNV() throws Exception {
    	String maNV, tenNV, gioiTinh, ns, nvl, chucVu, soCMND, soDT, matKhau, maCV;
    	Date ngaySinh, ngayVaolam;
    	
    	maNV = txtMaNV.getText();
    	tenNV = txtTenNV.getText();
    	ns = txtNgaySinh.getText().trim();
    	ngaySinh = Date.valueOf(ns.substring(6)+"-"+ns.substring(3,5)+"-"+ns.substring(0,2));
    	nvl = txtNgayVaoLam.getText().trim();
    	ngayVaolam = Date.valueOf(nvl.substring(6)+"-"+nvl.substring(3,5)+"-"+nvl.substring(0,2));
    	gioiTinh = cbxGioiTinh.getSelectedItem()+"";
    	chucVu = cbxChucVu.getSelectedItem()+"";
    	maCV = layMaCVTheoTen(chucVu);
    	soDT = txtSDT.getText();
    	soCMND = txtCMND.getText();
    	matKhau = txtMatKhau.getText();
    	
    	NhanVien nv = new NhanVien(maNV, tenNV, gioiTinh, soDT, soCMND, ngaySinh, new ChucVu(maCV), ngayVaolam, matKhau);
    	if(!DAO_NhanVien.capNhatNV(nv)) {
    		JOptionPane.showMessageDialog(rootPane, "Cập nhật không thành công!");
    		return false;
    	}
    	JOptionPane.showMessageDialog(rootPane, "Cập nhật thành công!");
    	return true;
    }
    
    public boolean capNhatCV() throws Exception {
    	String maCV, tenCV;
    	
    	maCV = txtMaCV.getText();
    	tenCV = txtTenCV.getText();
    	
    	ChucVu cv = new ChucVu(maCV, tenCV);
    	if(!DAO_ChucVu.capNhatCV(cv)) {
    		JOptionPane.showMessageDialog(rootPane, "Cập nhật không thành công!");
    		return false;
    	}
    	JOptionPane.showMessageDialog(rootPane, "Cập nhật thành công!");
    	return true;
    }
    
    public void DocDuLieuVaoTextFiedNV()
    {
    	ArrayList<NhanVien> lstNV = DAO_NhanVien.getAllNhanVien();
		int i = tblDSNV.getSelectedRow();
		NhanVien nv = lstNV.get(i);
		txtMaNV.setText(nv.getMaNV());
		txtTenNV.setText(nv.getTenNV());
		cbxGioiTinh.setSelectedItem(nv.getGioiTinh());
		SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
		txtNgaySinh.setText(sdf.format(nv.getNgaySinh()));
		cbxChucVu.setSelectedItem(getTenChucVu(nv.getChucVu().getMaCV()));
		txtCMND.setText(nv.getSoCMND());
		txtSDT.setText(nv.getSoDT());
		txtNgayVaoLam.setText(sdf.format(nv.getNgayVaoLam()));
		txtMatKhau.setText(nv.getMatKhau());
    }
    
//    public void hienThiChiTietNV() {
//    	int[] rows = tblDSNV.getSelectedRows();
//		
//		txtMaNV.setText(String.valueOf(tblDSNV.getValueAt(rows[0], 0)));
//		txtTenNV.setText(String.valueOf(tblDSNV.getValueAt(rows[0], 1)));
//		cbxGioiTinh.setSelectedItem(String.valueOf(tblDSNV.getValueAt(rows[0], 2)));
//		cbxChucVu.setSelectedItem(String.valueOf(tblDSNV.getValueAt(rows[0], 3)));
//		txtNgaySinh.setText(String.valueOf(tblDSNV.getValueAt(rows[0], 4)));
//		txtCMND.setText(String.valueOf(tblDSNV.getValueAt(rows[0], 5)));
//		txtSDT.setText(String.valueOf(tblDSNV.getValueAt(rows[0], 6)));
//		txtNgayVaoLam.setText(String.valueOf(tblDSNV.getValueAt(rows[0], 7)));
//		txtMatKhau.setText(String.valueOf(tblDSNV.getValueAt(rows[0], 8)));
//    }
    
    public void hienThiChiTietCV() {
    	int i = tblDSCV.getSelectedRow();
		
		txtMaCV.setText(String.valueOf(tblDSCV.getValueAt(i, 0)));
		txtTenCV.setText(String.valueOf(tblDSCV.getValueAt(i, 1)));
    }
    
    private void btnQuayLaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuayLaiActionPerformed
        // TODO add your handling code here:
        GD_Chinh ui = new GD_Chinh();
        this.setVisible(false);
        ui.setVisible(true);
    }//GEN-LAST:event_btnQuayLaiActionPerformed

    private void txtTenNVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTenNVActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTenNVActionPerformed

    private void txtTimCVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTimCVActionPerformed
        // TODO add your handling code here:
    	String ten = txtTimCV.getText().replaceAll("\\s\\s+", " ").trim();
    	timCV(ten);
    	setGiaTriMacDinhCV();
    }//GEN-LAST:event_txtTimCVActionPerformed

    private void btnLamMoiCVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLamMoiCVActionPerformed
        // TODO add your handling code here:
    	setGiaTriMacDinhCV();
    }//GEN-LAST:event_btnLamMoiCVActionPerformed

    private void btnLamMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLamMoiActionPerformed
        // TODO add your handling code here:
    	setGiaTriMacDinhNV();
    }//GEN-LAST:event_btnLamMoiActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) throws ParseException {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
    	themNV();
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnThemCVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemCVActionPerformed
        // TODO add your handling code here:
    	themCV();
    	loadCBXChucVu();
    }//GEN-LAST:event_btnThemCVActionPerformed

    private void btnCapNhatActionPerformed(java.awt.event.ActionEvent evt) throws Exception {//GEN-FIRST:event_btnCapNhatActionPerformed
        // TODO add your handling code here:
    	capNhatNV();
    }//GEN-LAST:event_btnCapNhatActionPerformed

    private void btnCapNhatCVActionPerformed(java.awt.event.ActionEvent evt) throws Exception {//GEN-FIRST:event_btnCapNhatCVActionPerformed
        // TODO add your handling code here:
    	capNhatCV();
    }//GEN-LAST:event_btnCapNhatCVActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
    	xoaNV();
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnXoaCVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaCVActionPerformed
        // TODO add your handling code here:
    	xoaCV();
    	loadCBXChucVu();
    }//GEN-LAST:event_btnXoaCVActionPerformed

    private void btnRefeshNVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefeshNVActionPerformed
        // TODO add your handling code here:
    	tblDSNV.clearSelection();
    	taiLaiDSNV();
    }//GEN-LAST:event_btnRefeshNVActionPerformed

    private void btnRefeshCVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefeshCVActionPerformed
        // TODO add your handling code here:
    	tblDSCV.clearSelection();
    	taiLaiDSCV();
    }//GEN-LAST:event_btnRefeshCVActionPerformed

    private void btnTimNVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimNVActionPerformed
        // TODO add your handling code here:
    	String ten = txtTim.getText().replaceAll("\\s\\s+", " ").trim();
    	timNV(ten);
    	setGiaTriMacDinhNV();
    }//GEN-LAST:event_btnTimNVActionPerformed

    private void btnTimCVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimCVActionPerformed
        // TODO add your handling code here:
    	String ten = txtTimCV.getText().replaceAll("\\s\\s+", " ").trim();
    	modelDSCV.setRowCount(0);
    	timCV(ten);
    	setGiaTriMacDinhCV();
    }//GEN-LAST:event_btnTimCVActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GD_NhanVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GD_NhanVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GD_NhanVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GD_NhanVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GD_NhanVien().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCapNhat;
    private javax.swing.JButton btnCapNhatCV;
    private javax.swing.JButton btnLamMoi;
    private javax.swing.JButton btnLamMoiCV;
    private javax.swing.JButton btnQuayLai;
    private javax.swing.JButton btnRefeshCV;
    private javax.swing.JButton btnRefeshNV;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnThemCV;
    private javax.swing.JButton btnTimCV;
    private javax.swing.JButton btnTimNV;
    private javax.swing.JButton btnXoa;
    private javax.swing.JButton btnXoaCV;
    private javax.swing.JComboBox<String> cbxChucVu;
    private javax.swing.JComboBox<String> cbxGioiTinh;
    private javax.swing.JLabel lblCMND;
    private javax.swing.JLabel lblChucVu;
    private javax.swing.JLabel lblDSCV;
    private javax.swing.JLabel lblDSNV;
    private javax.swing.JLabel lblGioiTinh;
    private javax.swing.JLabel lblMaNV;
    private javax.swing.JLabel lblMatKhau;
    private javax.swing.JLabel lblNgaySinh;
    private javax.swing.JLabel lblNgayVaoLam;
    private javax.swing.JLabel lblSDT;
    private javax.swing.JLabel lblTTCV;
    private javax.swing.JLabel lblTTNV;
    private javax.swing.JLabel lblTenCV;
    private javax.swing.JLabel lblTenNV;
    private javax.swing.JLabel lblTieuDe;
    private javax.swing.JLabel lblmaCV;
    private javax.swing.JPanel pblTTNV;
    private javax.swing.JPanel pnlDSCV;
    private javax.swing.JPanel pnlDSNV;
    private javax.swing.JPanel pnlMain;
    private javax.swing.JPanel pnlNV;
    private javax.swing.JPanel pnlOuter;
    private javax.swing.JScrollPane scrollDSCV;
    private javax.swing.JScrollPane scrollDSNV;
    private javax.swing.JTable tblDSCV;
    private javax.swing.JTable tblDSNV;
    private javax.swing.JTextField txtCMND;
    private javax.swing.JTextField txtMaCV;
    private javax.swing.JTextField txtMaNV;
    private javax.swing.JTextField txtMatKhau;
    private javax.swing.JTextField txtNgaySinh;
    private javax.swing.JTextField txtNgayVaoLam;
    private javax.swing.JTextField txtSDT;
    private javax.swing.JTextField txtTenCV;
    private javax.swing.JTextField txtTenNV;
    private javax.swing.JTextField txtTim;
    private javax.swing.JTextField txtTimCV;
    // End of variables declaration//GEN-END:variables
}
