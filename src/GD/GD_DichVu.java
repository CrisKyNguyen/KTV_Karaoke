/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GD;

import java.sql.Date;
import java.sql.Timestamp;
import java.text.NumberFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Locale;

import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

import dao.DAO_DichVu;
import dao.DAO_HoaDonDichVu;
import dao.DAO_HoaDonPhong;
import dao.DAO_Phong;
import entity.DichVu;
import entity.HoaDon;
import entity.HoaDonDichVu;
import entity.HoaDonPhong;
import entity.Phong;

/**
 *
 * @author Windows
 */
public class GD_DichVu extends javax.swing.JFrame {
    /**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	public GD_DichVu() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    private DefaultTableModel modelDSDV, modelDSPhongDat, modelDSDVDat;
    private String[] colsDSDV={"Mã DV", "Tên dịch vụ", "Giá"};
    private String[] colsDSPhongDat={"Mã Hóa đơn", "Mã phòng", "Tên phòng"};
    private String[] colsDSDVDat={"Tên dịch vụ", "Giá", "Số lượng", "Thành tiền", "Ngày đặt"};
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlVien = new javax.swing.JPanel();
        pnlMain = new javax.swing.JPanel();
        lblDichVu = new javax.swing.JLabel();
        pnlDSDichVu = new javax.swing.JPanel();
        scrollPaneDSDichVu = new javax.swing.JScrollPane();
        tblDSDV = new javax.swing.JTable();
        lblDSDichVu = new javax.swing.JLabel();
        btnTim = new javax.swing.JButton();
        btnQuayLai = new javax.swing.JButton();
        pnlDSPhong = new javax.swing.JPanel();
        lblDSPhong = new javax.swing.JLabel();
        scrollPaneDSPhong = new javax.swing.JScrollPane();
        tblDSPhong = new javax.swing.JTable();
        pnlDichVu = new javax.swing.JPanel();
        txtFdTenDV = new javax.swing.JTextField();
        txtFDGiaDV = new javax.swing.JTextField();
        lblTTDichvu = new javax.swing.JLabel();
        lblTenDV = new javax.swing.JLabel();
        lblGiaDV = new javax.swing.JLabel();
        btnThemDV = new javax.swing.JButton();
        btnCapNhat = new javax.swing.JButton();
        btnXoaDV = new javax.swing.JButton();
        lblMaDV = new javax.swing.JLabel();
        txtMaDV = new javax.swing.JTextField();
        pnlDVDat = new javax.swing.JPanel();
        scrollPaneDVDat = new javax.swing.JScrollPane();
        tblDVDat = new javax.swing.JTable();
        lblDVDaDat = new javax.swing.JLabel();
        btnHuyDV = new javax.swing.JButton();
        btnDatDV = new javax.swing.JButton();
        txtTim = new javax.swing.JTextField();
        txtSoLuong = new javax.swing.JTextField();
        lblSoLuong = new javax.swing.JLabel();
        btnLamMoi = new javax.swing.JButton();
        btnThemSL = new javax.swing.JButton();
        btnBotSL = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("DichVu");
        setBackground(new java.awt.Color(102, 204, 255));
        setResizable(false);

        pnlVien.setBackground(new java.awt.Color(204, 255, 255));

        pnlMain.setBackground(new java.awt.Color(0, 204, 255));

        lblDichVu.setFont(new java.awt.Font("Tahoma", 1, 30)); // NOI18N
        lblDichVu.setForeground(new java.awt.Color(0, 0, 102));
        lblDichVu.setText("DỊCH VỤ");

        pnlDSDichVu.setBackground(new java.awt.Color(204, 255, 255));

        lblDSDichVu.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lblDSDichVu.setForeground(new java.awt.Color(0, 0, 102));
        lblDSDichVu.setText("DANH SÁCH DỊCH VỤ");
        
        // Model DSDV
        modelDSDV = new DefaultTableModel(colsDSDV,0);
        tblDSDV = new JTable(modelDSDV);
        scrollPaneDSDichVu.setViewportView(tblDSDV);
        
        // Sự kiện click trên tblDSHD
        ListSelectionModel listSelectionModelDSHD = tblDSDV.getSelectionModel();
        // Thiết lập chỉ click được 1 dòng
        listSelectionModelDSHD.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        // Xử lý sự kiện click
        listSelectionModelDSHD.addListSelectionListener(new ListSelectionListener() {
			
			@Override
			public void valueChanged(ListSelectionEvent e) {
				// TODO Auto-generated method stub
				try {
					hienThiChiTietDV();
				} catch (Exception e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				} 
			}
		});

        javax.swing.GroupLayout pnlDSDichVuLayout = new javax.swing.GroupLayout(pnlDSDichVu);
        pnlDSDichVu.setLayout(pnlDSDichVuLayout);
        pnlDSDichVuLayout.setHorizontalGroup(
            pnlDSDichVuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrollPaneDSDichVu)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDSDichVuLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblDSDichVu)
                .addGap(131, 131, 131))
        );
        pnlDSDichVuLayout.setVerticalGroup(
            pnlDSDichVuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDSDichVuLayout.createSequentialGroup()
                .addComponent(lblDSDichVu, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollPaneDSDichVu, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
        );

        btnTim.setBackground(new java.awt.Color(255, 255, 255));
        btnTim.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnTim.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/ic_tim.png"))); // NOI18N
        btnTim.setText("TÌM");
        btnTim.setBorderPainted(false);
        btnTim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimActionPerformed(evt);
            }
        });

        btnQuayLai.setBackground(new java.awt.Color(255, 255, 255));
        btnQuayLai.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnQuayLai.setText("QUAY LẠI");
        btnQuayLai.setBorderPainted(false);
        btnQuayLai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuayLaiActionPerformed(evt);
            }
        });

        pnlDSPhong.setBackground(new java.awt.Color(204, 255, 255));

        lblDSPhong.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lblDSPhong.setForeground(new java.awt.Color(0, 0, 102));
        lblDSPhong.setText("DANH SÁCH HOÁ ĐƠN PHÒNG HÁT");

        // Model DSPhongDat
        modelDSPhongDat = new DefaultTableModel(colsDSPhongDat,0);
        tblDSPhong = new JTable(modelDSPhongDat);
        scrollPaneDSPhong.setViewportView(tblDSPhong);
        
        // Sự kiện click trên tblDSPhongDat
        ListSelectionModel listSelectionModelDSPhongDat = tblDSPhong.getSelectionModel();
        // Thiết lập chỉ click được 1 dòng
        listSelectionModelDSPhongDat.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        // Xử lý sự kiện click
        listSelectionModelDSPhongDat.addListSelectionListener(new ListSelectionListener() {
			
			@Override
			public void valueChanged(ListSelectionEvent e) {
				// TODO Auto-generated method stub
				try {
					modelDSDVDat.setRowCount(0);
					DocDuLieuDatabaseVaoTableDSDVDat();
				} catch (Exception e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				} 
			}
		});

        javax.swing.GroupLayout pnlDSPhongLayout = new javax.swing.GroupLayout(pnlDSPhong);
        pnlDSPhong.setLayout(pnlDSPhongLayout);
        pnlDSPhongLayout.setHorizontalGroup(
            pnlDSPhongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrollPaneDSPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDSPhongLayout.createSequentialGroup()
                .addContainerGap(90, Short.MAX_VALUE)
                .addComponent(lblDSPhong)
                .addGap(71, 71, 71))
        );
        pnlDSPhongLayout.setVerticalGroup(
            pnlDSPhongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDSPhongLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(lblDSPhong)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollPaneDSPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pnlDichVu.setBackground(new java.awt.Color(204, 255, 255));

        txtFdTenDV.setForeground(new java.awt.Color(0, 0, 0));
        txtFdTenDV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFdTenDVActionPerformed(evt);
            }
        });

        txtFDGiaDV.setForeground(new java.awt.Color(0, 0, 0));

        lblTTDichvu.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lblTTDichvu.setForeground(new java.awt.Color(0, 0, 102));
        lblTTDichvu.setText("THÔNG TIN DỊCH VỤ");

        lblTenDV.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblTenDV.setText("Tên dịch vụ");

        lblGiaDV.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblGiaDV.setText("Giá dịch vụ");

        btnThemDV.setBackground(new java.awt.Color(255, 255, 255));
        btnThemDV.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnThemDV.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/ic_add.png"))); // NOI18N
        btnThemDV.setText("THÊM");
        btnThemDV.setBorderPainted(false);
        btnThemDV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
					btnThemDVActionPerformed(evt);
				} catch (ParseException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
            }
        });

        btnCapNhat.setBackground(new java.awt.Color(255, 255, 255));
        btnCapNhat.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnCapNhat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/ic_lamMoi.png"))); // NOI18N
        btnCapNhat.setText("CẬP NHẬT");
        btnCapNhat.setBorderPainted(false);
        btnCapNhat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
					btnCapNhatActionPerformed(evt);
				} catch (Exception e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
            }
        });

        btnXoaDV.setBackground(new java.awt.Color(255, 255, 255));
        btnXoaDV.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnXoaDV.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/ic_xoa.png"))); // NOI18N
        btnXoaDV.setText("XOÁ");
        btnXoaDV.setBorderPainted(false);
        btnXoaDV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaDVActionPerformed(evt);
            }
        });

        lblMaDV.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblMaDV.setText("Mã dịch vụ");

        txtMaDV.setEditable(false);
        txtMaDV.setBackground(new java.awt.Color(204, 204, 204));

        javax.swing.GroupLayout pnlDichVuLayout = new javax.swing.GroupLayout(pnlDichVu);
        pnlDichVu.setLayout(pnlDichVuLayout);
        pnlDichVuLayout.setHorizontalGroup(
            pnlDichVuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDichVuLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDichVuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlDichVuLayout.createSequentialGroup()
                        .addComponent(btnThemDV, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(61, 61, 61)
                        .addComponent(btnCapNhat, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                        .addComponent(btnXoaDV, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlDichVuLayout.createSequentialGroup()
                        .addGroup(pnlDichVuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlDichVuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(lblTenDV, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblGiaDV, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(lblMaDV))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnlDichVuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtMaDV)
                            .addComponent(txtFdTenDV)
                            .addComponent(txtFDGiaDV))))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDichVuLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblTTDichvu)
                .addGap(150, 150, 150))
        );
        pnlDichVuLayout.setVerticalGroup(
            pnlDichVuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDichVuLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTTDichvu, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addGroup(pnlDichVuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblMaDV, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtMaDV, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlDichVuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTenDV)
                    .addComponent(txtFdTenDV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlDichVuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblGiaDV)
                    .addComponent(txtFDGiaDV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(pnlDichVuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThemDV)
                    .addComponent(btnCapNhat)
                    .addComponent(btnXoaDV))
                .addContainerGap())
        );

        pnlDVDat.setBackground(new java.awt.Color(204, 255, 255));

        lblDVDaDat.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lblDVDaDat.setForeground(new java.awt.Color(0, 0, 102));
        lblDVDaDat.setText("DỊCH VỤ ĐÃ ĐẶT");
        
     // Model DSDVDat
        modelDSDVDat = new DefaultTableModel(colsDSDVDat,0);
        tblDVDat = new JTable(modelDSDVDat);
        scrollPaneDVDat.setViewportView(tblDVDat);
        
        // Sự kiện click trên tblDSPhongDat
        ListSelectionModel listSelectionModelDSDVDat = tblDVDat.getSelectionModel();
        // Thiết lập chỉ click được 1 dòng
        listSelectionModelDSDVDat.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        // Xử lý sự kiện click
        listSelectionModelDSDVDat.addListSelectionListener(new ListSelectionListener() {
			
			@Override
			public void valueChanged(ListSelectionEvent e) {
				// TODO Auto-generated method stub
				try {
					
				} catch (Exception e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				} 
			}
		});

        javax.swing.GroupLayout pnlDVDatLayout = new javax.swing.GroupLayout(pnlDVDat);
        pnlDVDat.setLayout(pnlDVDatLayout);
        pnlDVDatLayout.setHorizontalGroup(
            pnlDVDatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrollPaneDVDat, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDVDatLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblDVDaDat)
                .addGap(150, 150, 150))
        );
        pnlDVDatLayout.setVerticalGroup(
            pnlDVDatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDVDatLayout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(lblDVDaDat, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollPaneDVDat, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        btnHuyDV.setBackground(new java.awt.Color(255, 255, 255));
        btnHuyDV.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnHuyDV.setText("HUỶ DỊCH VỤ");
        btnHuyDV.setBorderPainted(false);
        btnHuyDV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHuyDVActionPerformed(evt);
            }
        });

        btnDatDV.setBackground(new java.awt.Color(255, 255, 255));
        btnDatDV.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnDatDV.setText("ĐẶT DỊCH VỤ");
        btnDatDV.setBorderPainted(false);
        btnDatDV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
					btnDatDVActionPerformed(evt);
				} catch (Exception e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
            }
        });

        lblSoLuong.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblSoLuong.setForeground(new java.awt.Color(0, 0, 102));
        lblSoLuong.setText("Số lượng");

        btnLamMoi.setBackground(new java.awt.Color(255, 255, 255));
        btnLamMoi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/ic_refesh (1).png"))); // NOI18N
        btnLamMoi.setBorderPainted(false);
        btnLamMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLamMoiActionPerformed(evt);
            }
        });

        btnThemSL.setBackground(new java.awt.Color(255, 255, 255));
        btnThemSL.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnThemSL.setText("Thêm");
        btnThemSL.setBorderPainted(false);
        btnThemSL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
					btnThemSLActionPerformed(evt);
				} catch (Exception e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
            }
        });

        btnBotSL.setBackground(new java.awt.Color(255, 255, 255));
        btnBotSL.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnBotSL.setText("Bớt");
        btnBotSL.setBorderPainted(false);
        btnBotSL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
					btnBotSLActionPerformed(evt);
				} catch (Exception e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
            }
        });

        javax.swing.GroupLayout pnlMainLayout = new javax.swing.GroupLayout(pnlMain);
        pnlMain.setLayout(pnlMainLayout);
        pnlMainLayout.setHorizontalGroup(
            pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMainLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlMainLayout.createSequentialGroup()
                        .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(pnlMainLayout.createSequentialGroup()
                                .addComponent(btnLamMoi)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtTim)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnTim))
                            .addComponent(pnlDSDichVu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(pnlDichVu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlMainLayout.createSequentialGroup()
                                .addComponent(lblSoLuong)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtSoLuong)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnDatDV)
                                .addGap(22, 22, 22))
                            .addGroup(pnlMainLayout.createSequentialGroup()
                                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(pnlDVDat, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(pnlDSPhong, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addContainerGap())
                            .addGroup(pnlMainLayout.createSequentialGroup()
                                .addGap(59, 59, 59)
                                .addComponent(btnThemSL)
                                .addGap(47, 47, 47)
                                .addComponent(btnHuyDV)
                                .addGap(44, 44, 44)
                                .addComponent(btnBotSL, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(pnlMainLayout.createSequentialGroup()
                        .addComponent(btnQuayLai, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(310, 310, 310)
                        .addComponent(lblDichVu)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        pnlMainLayout.setVerticalGroup(
            pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMainLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnQuayLai, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDichVu, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, 18, Short.MAX_VALUE)
                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlMainLayout.createSequentialGroup()
                        .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnLamMoi)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtTim, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnTim, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnlDSDichVu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18))
                    .addGroup(pnlMainLayout.createSequentialGroup()
                        .addComponent(pnlDSPhong, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnDatDV, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblSoLuong, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlDichVu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlMainLayout.createSequentialGroup()
                        .addComponent(pnlDVDat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnHuyDV, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnThemSL)
                            .addComponent(btnBotSL))))
                .addGap(12, 12, 12))
        );

        javax.swing.GroupLayout pnlVienLayout = new javax.swing.GroupLayout(pnlVien);
        pnlVien.setLayout(pnlVienLayout);
        pnlVienLayout.setHorizontalGroup(
            pnlVienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlVienLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlVienLayout.setVerticalGroup(
            pnlVienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlVienLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlVien, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlVien, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
        
        setGiaTriMacDinh();
        
        DocDuLieuDatabaseVaoTableDSDV();
        DocDuLieuDatabaseVaoTableDSPhongDat();
        
    }// </editor-fold>//GEN-END:initComponents
    
    public void setGiaTriMacDinh() {
    	txtMaDV.setText(maDichVuMoi());
    	txtFdTenDV.setText("");
    	txtFDGiaDV.setText("");
    }
    
    public String maDichVuMoi() {
    	ArrayList<DichVu> listDV = DAO_DichVu.getAllDichVu();
    	String ma = listDV.get(listDV.size()-1).getMaDV().substring(2);
    	
    	int i = Integer.parseInt(ma) + 1;
    	if(i<10)
    		ma = "00" + i;
    	else if(i>=10 && i<=99)
    		ma = "0" + i;
    	else if(i>=100)
    		ma = i+"";
    	return "DV"+ma;
    }
    
    public void DocDuLieuDatabaseVaoTableDSDV() {
		ArrayList<DichVu> lstDV = DAO_DichVu.getAllDichVu();
		for (DichVu dv : lstDV) {
			modelDSDV.addRow(new Object[] {
					dv.getMaDV(),dv.getTenDV(),dinhDangTienTe(getGiaDV(dv.getMaDV()))});}
		
    }
    
    public void DocDuLieuDatabaseVaoTableDSPhongDat() {
		ArrayList<HoaDonPhong> list = DAO_HoaDonPhong.getAllHoaDonPhongDatTheoHDChuaThanhToan();
		for (HoaDonPhong hdp : list) {
			modelDSPhongDat.addRow(new Object[] {
					hdp.getHoaDon().getMaHD(),
					hdp.getPhong().getMaPhong(),
					getTenPhong(hdp.getPhong().getMaPhong())});}
    }
    
    public void DocDuLieuDatabaseVaoTableDSDVDat() {
    	int i = tblDSPhong.getSelectedRow();
    	
    	HoaDon hd = new HoaDon(String.valueOf(tblDSPhong.getValueAt(i, 0)));
    	Phong p = new Phong(String.valueOf(tblDSPhong.getValueAt(i, 1)));
    	
    	ArrayList<HoaDonDichVu> dsHDDV = DAO_HoaDonDichVu.getAllHDDV(hd, p);
    	if(dsHDDV.size()!=0) {
    		for (HoaDonDichVu hddv : dsHDDV) {
        		modelDSDVDat.addRow(new Object[] {
            			getTenDV(hddv.getDichVu().getMaDV()),
            			dinhDangTienTe(getGiaDV(hddv.getDichVu().getMaDV())),
            			hddv.getSoLuong(),
            			dinhDangTienTe(hddv.getSoLuong()*getGiaDV(hddv.getDichVu().getMaDV())),
            			new SimpleDateFormat("dd-MM-yyyy").format(new Date(hddv.getGioDatDV().getTime()))});
    		}
    	}	
    }
    
    public boolean kiemTraDuLieu() {
		String tenDV=txtFdTenDV.getText().trim();
		double giaDV = 0;
		String gia = Double.toString(giaDV);
		gia = txtFDGiaDV.getText().trim();
		if (tenDV.trim().length() > 0) {
			if (!(tenDV.matches("[^.\\/\\_\\+\\?\\#\\%\\@\\!\\$\\^\\&\\*\\(\\)]+"))) {
				JOptionPane.showMessageDialog(this, "Tên dịch vụ không chứa ký tự đặc biệt");
				return false;
			}
		} else {
			JOptionPane.showMessageDialog(this, "Tên dịch vụ không được để trống");
			return false;
		}
		if (gia.trim().length()>0) {
			if (!(gia.matches("^[1-9]([0-9]{3,})"))) {
				JOptionPane.showMessageDialog(this, "Giá dịch vụ phải là số");
				return false;
			}
		} else {
			JOptionPane.showMessageDialog(this, "Giá dịch vụ không được để trống");
			return false;
		}
		return true;
    }
    
    public boolean datDV() throws Exception {
    	String maHD, maPhong, maDV;
    	int soLuong;
    	int i = tblDSPhong.getSelectedRow();
    	int j = tblDSDV.getSelectedRow();
    	Timestamp gioDatDV = new Timestamp(System.currentTimeMillis());
    	
    	maHD = String.valueOf(tblDSPhong.getValueAt(i, 0));
    	maPhong = String.valueOf(tblDSPhong.getValueAt(i, 1));
    	maDV = String.valueOf(tblDSDV.getValueAt(j, 0));
    	if(txtSoLuong.getText().equalsIgnoreCase("")) {
    		JOptionPane.showMessageDialog(rootPane, "Chưa nhập số lượng!", "Lỗi!", JOptionPane.WARNING_MESSAGE);
    		return false;
    	}
    	
    	try {
    		soLuong = Integer.parseInt(txtSoLuong.getText());
		} catch (Exception e) {
			JOptionPane.showMessageDialog(rootPane, "Số lượng không hợp lệ!", "Lỗi!", JOptionPane.WARNING_MESSAGE);
			return false;
		}
    	
    	ArrayList<HoaDonDichVu> dsHDDV = DAO_HoaDonDichVu.getAllHDDVTheoHDvaPhongvaDV
    									 (new HoaDon(maHD), new Phong(maPhong), new DichVu(maDV));
    	HoaDonDichVu hddv = new HoaDonDichVu(new HoaDon(maHD), new DichVu(maDV), new Phong(maPhong), soLuong, gioDatDV);
    	if(dsHDDV.size()==0) {
        	if(!DAO_HoaDonDichVu.themHDDV(hddv))
        		return false;
        	JOptionPane.showMessageDialog(rootPane, "Đặt dịch vụ thành công!");
        	txtSoLuong.setText("");
        	modelDSDVDat.setRowCount(0);
        	DocDuLieuDatabaseVaoTableDSDVDat();
        	setGiaTriMacDinh();
    	}
    	else {
    		JOptionPane.showMessageDialog(rootPane, "Dịch vụ đã có trong hóa đơn! \nHãy cập nhật lại số lượng!");
    	}
    	return true;
    }
    
    public boolean huyDatDV() {
    	String maHD, maPhong, maDV;
    	int i = tblDSPhong.getSelectedRow();
    	int j = tblDVDat.getSelectedRow();
    	
    	maHD = String.valueOf(tblDSPhong.getValueAt(i, 0));
    	maPhong = String.valueOf(tblDSPhong.getValueAt(i, 1));
    	
    	ArrayList<HoaDonDichVu> listHDDV = DAO_HoaDonDichVu.getAllHDDV(new HoaDon(maHD), new Phong(maPhong));
    	HoaDonDichVu hDichVu = listHDDV.get(j);
    	
    	maDV = hDichVu.getDichVu().getMaDV();
    	
    	HoaDonDichVu hddv = new HoaDonDichVu(new HoaDon(maHD), new DichVu(maDV), new Phong(maPhong));
    	if(!DAO_HoaDonDichVu.huyDatDV(hddv)) {
    		return false;
    	}
    	JOptionPane.showMessageDialog(rootPane, "Hủy dịch vụ thành công!");
    	modelDSDVDat.setRowCount(0);
    	DocDuLieuDatabaseVaoTableDSDVDat();
    	setGiaTriMacDinh();
    	return true;
    }
    
    public boolean capNhatSoLuongDV(int soLuong) throws Exception {
    	String maHD, maPhong, maDV;
    	int i = tblDSPhong.getSelectedRow();
    	int j = tblDVDat.getSelectedRow();
    	Timestamp gioDatDV = new Timestamp(System.currentTimeMillis());
    	
    	maHD = String.valueOf(tblDSPhong.getValueAt(i, 0));
    	maPhong = String.valueOf(tblDSPhong.getValueAt(i, 1));
    	
    	ArrayList<HoaDonDichVu> listHDDV = DAO_HoaDonDichVu.getAllHDDV(new HoaDon(maHD), new Phong(maPhong));
    	HoaDonDichVu hDichVu = listHDDV.get(j);
    	
    	maDV = hDichVu.getDichVu().getMaDV();
    	
    	HoaDonDichVu hddv = new HoaDonDichVu(new HoaDon(maHD), new DichVu(maDV), new Phong(maPhong), soLuong, gioDatDV);
    	if(!DAO_HoaDonDichVu.capNhatHDDV(hddv))
			return false;
		JOptionPane.showMessageDialog(rootPane, "Cập nhật số lượng dịch vụ thành công!");
		txtSoLuong.setText("");
    	modelDSDVDat.setRowCount(0);
    	DocDuLieuDatabaseVaoTableDSDVDat();
    	return true;
    }
    
    public String getTenPhong(String maPhong) {
    	ArrayList<Phong> listPhong = DAO_Phong.getAllPhong();
    	for (Phong p : listPhong) {
    		if(p.getMaPhong().equalsIgnoreCase(maPhong))
    			return p.getTenPhong();
    	}
    	return "";
    }
    
    public String getTenDV(String maDV) {
    	ArrayList<DichVu> listDV = DAO_DichVu.getAllDichVu();
    	for (DichVu dv : listDV) {
    		if(dv.getMaDV().equalsIgnoreCase(maDV))
    			return dv.getTenDV();
    	}
    	return "";
    }
    
    public double getGiaDV(String maDV) {
    	ArrayList<DichVu> listDV = DAO_DichVu.getAllDichVu();
    	for (DichVu dv : listDV) {
    		if(dv.getMaDV().equalsIgnoreCase(maDV)) {
//    			BigDecimal giaLP = new BigDecimal(lp.getGiaLP()).setScale(0, BigDecimal.ROUND_HALF_UP);
    			return dv.getGiaDV();
    		}
    	}
    	return 0;
    }
    
    public String dinhDangTienTe(double tien) {
    	Locale localeVN = new Locale("vi", "VN");
	    NumberFormat currencyVN = NumberFormat.getCurrencyInstance(localeVN);
    	return currencyVN.format(tien);
    }

    public void taiLaiDSDV() {
    	modelDSDV.setRowCount(0);
    	DocDuLieuDatabaseVaoTableDSDV();
    	setGiaTriMacDinh();
    	txtTim.setText("");
    }
    
    public void timDV(String ten) {
		ArrayList<DichVu> lstDV = DAO_DichVu.timDV(ten);
		for (DichVu dv : lstDV) {
			modelDSDV.addRow(new Object[] {
					dv.getMaDV(),dv.getTenDV(),dinhDangTienTe(getGiaDV(dv.getMaDV()))});}
    }
    
    public boolean capNhatDV() throws Exception {
    	String maDV, tenDV;
    	Double giaDV;
    	
    	maDV = txtMaDV.getText();
    	tenDV = txtFdTenDV.getText();
    	giaDV = Double.parseDouble(txtFDGiaDV.getText());
    	
    	DichVu dv = new DichVu(maDV,tenDV,giaDV);
    	if(!DAO_DichVu.capNhatDV(dv)) {
    		JOptionPane.showMessageDialog(rootPane, "Cập nhật không thành công!");
    		return false;
    	}
    	JOptionPane.showMessageDialog(rootPane, "Cập nhật thành công!");
    	modelDSDV.setRowCount(0);
    	DocDuLieuDatabaseVaoTableDSDV();
    	setGiaTriMacDinh();
    	return true;
    }
    public void hienThiChiTietDV() {
    	int i = tblDSDV.getSelectedRow();
		
		txtMaDV.setText(String.valueOf(tblDSDV.getValueAt(i, 0)));
		txtFdTenDV.setText(String.valueOf(tblDSDV.getValueAt(i, 1)));
		txtFDGiaDV.setText(String.valueOf(tblDSDV.getValueAt(i, 2)));
	}
    
    public boolean themDV() throws ParseException {
    	String maDV, tenDV;
    	Double giaDV;
    	
    	if(kiemTraDuLieu()) {
    		maDV = txtMaDV.getText();
        	tenDV = txtFdTenDV.getText();
        	giaDV = Double.parseDouble(txtFDGiaDV.getText());
        	DichVu dv = new DichVu(maDV, tenDV, giaDV);
        	if(!DAO_DichVu.themDV(dv))
        		return false;
        	JOptionPane.showMessageDialog(rootPane, "Thêm dịch vụ thành công!");
        	modelDSDV.setRowCount(0);
        	DocDuLieuDatabaseVaoTableDSDV();
        	setGiaTriMacDinh();
    	}
    	return true;
    }
    
    public boolean xoaDV()
    {
    	int result = JOptionPane.showConfirmDialog(rootPane,
                "Bạn có chắc muốn xóa dịch vụ này!",
                "Xác nhận",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.WARNING_MESSAGE);
        if (result == JOptionPane.YES_OPTION) {
        	DAO_DichVu.xoaDV(txtMaDV.getText());
        	JOptionPane.showMessageDialog(rootPane, "Xóa dịch vụ thành công!");
        	modelDSDV.setRowCount(0);
        	DocDuLieuDatabaseVaoTableDSDV();
        	setGiaTriMacDinh();
        	return true;
        } else if (result == JOptionPane.NO_OPTION) {
        	JOptionPane.showMessageDialog(rootPane, "Đã hủy thao tác xóa!");
        }
        return false;
    }
    
    private void btnTimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimActionPerformed
        // TODO add your handling code here:
    	String ten = txtTim.getText().replaceAll("\\s\\s+", " ").trim();
    	modelDSDV.setRowCount(0);
    	timDV(ten);
    	setGiaTriMacDinh();
    }//GEN-LAST:event_btnTimActionPerformed

    private void btnQuayLaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuayLaiActionPerformed
        // TODO add your handling code here:
        GD_Chinh ui = new GD_Chinh();
        this.setVisible(false);
        ui.setVisible(true);
    }//GEN-LAST:event_btnQuayLaiActionPerformed

    private void txtFdTenDVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFdTenDVActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFdTenDVActionPerformed

    private void btnThemDVActionPerformed(java.awt.event.ActionEvent evt) throws ParseException {//GEN-FIRST:event_btnThemDVActionPerformed
        // TODO add your handling code here:
    	themDV();
    }//GEN-LAST:event_btnThemDVActionPerformed

    private void btnXoaDVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaDVActionPerformed
        // TODO add your handling code here:
    	xoaDV();
    }//GEN-LAST:event_btnXoaDVActionPerformed

    private void btnCapNhatActionPerformed(java.awt.event.ActionEvent evt) throws Exception {//GEN-FIRST:event_btnCapNhatActionPerformed
        // TODO add your handling code here:
    	capNhatDV();
    }//GEN-LAST:event_btnCapNhatActionPerformed

    private void btnLamMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLamMoiActionPerformed
        // TODO add your handling code here:
    	taiLaiDSDV();
    }//GEN-LAST:event_btnLamMoiActionPerformed

    private void btnHuyDVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHuyDVActionPerformed
        // TODO add your handling code here:
    	huyDatDV();
    }//GEN-LAST:event_btnHuyDVActionPerformed

    private void btnDatDVActionPerformed(java.awt.event.ActionEvent evt) throws Exception {//GEN-FIRST:event_btnDatDVActionPerformed
        // TODO add your handling code here:
    	datDV();
    }//GEN-LAST:event_btnDatDVActionPerformed

    private void btnThemSLActionPerformed(java.awt.event.ActionEvent evt) throws Exception {//GEN-FIRST:event_btnThemSLActionPerformed
        // TODO add your handling code here:
    	int soLuongThem, soLuong;
    	int i = tblDVDat.getSelectedRow();
    	
    	soLuong = Integer.parseInt(String.valueOf(tblDVDat.getValueAt(i, 2)));
    	
    	if(txtSoLuong.getText().equalsIgnoreCase("")) {
    		JOptionPane.showMessageDialog(rootPane, "Chưa nhập số lượng!", "Lỗi!", JOptionPane.WARNING_MESSAGE);
    		return;
    	}
    	
    	try {
    		soLuongThem = Integer.parseInt(txtSoLuong.getText());
		} catch (Exception e) {
			JOptionPane.showMessageDialog(rootPane, "Số lượng không hợp lệ!", "Lỗi!", JOptionPane.WARNING_MESSAGE);
			return;
		}
    	
    	if(soLuongThem<=0) {
    		JOptionPane.showMessageDialog(rootPane, "Số lượng thêm vào phải lớn hơn 0!", "Lỗi!", JOptionPane.WARNING_MESSAGE);
    		return;
    	}
    	
    	capNhatSoLuongDV(soLuong+soLuongThem);
    }//GEN-LAST:event_btnThemSLActionPerformed

    private void btnBotSLActionPerformed(java.awt.event.ActionEvent evt) throws Exception {//GEN-FIRST:event_btnBotSLActionPerformed
        // TODO add your handling code here:
    	int soLuongBot, soLuong;
    	int i = tblDVDat.getSelectedRow();
    	
    	soLuong = Integer.parseInt(String.valueOf(tblDVDat.getValueAt(i, 2)));
    	
    	if(txtSoLuong.getText().equalsIgnoreCase("")) {
    		JOptionPane.showMessageDialog(rootPane, "Chưa nhập số lượng!", "Lỗi!", JOptionPane.WARNING_MESSAGE);
    		return;
    	}
    	
    	try {
    		soLuongBot = Integer.parseInt(txtSoLuong.getText());
		} catch (Exception e) {
			JOptionPane.showMessageDialog(rootPane, "Số lượng không hợp lệ!", "Lỗi!", JOptionPane.WARNING_MESSAGE);
			return;
		}
    	
    	if(soLuongBot>soLuong) {
    		JOptionPane.showMessageDialog(rootPane, "Số lượng bớt đi phải nhỏ hơn số lượng đang có trong hóa đơn!", "Lỗi!", JOptionPane.WARNING_MESSAGE);
    		return;
    	}
    	
    	capNhatSoLuongDV(soLuong-soLuongBot);
    }//GEN-LAST:event_btnBotSLActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GD_DichVu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GD_DichVu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GD_DichVu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GD_DichVu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GD_DichVu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBotSL;
    private javax.swing.JButton btnCapNhat;
    private javax.swing.JButton btnDatDV;
    private javax.swing.JButton btnHuyDV;
    private javax.swing.JButton btnLamMoi;
    private javax.swing.JButton btnQuayLai;
    private javax.swing.JButton btnThemDV;
    private javax.swing.JButton btnThemSL;
    private javax.swing.JButton btnXoaDV;
    private javax.swing.JLabel lblDSDichVu;
    private javax.swing.JLabel lblDSPhong;
    private javax.swing.JLabel lblDVDaDat;
    private javax.swing.JLabel lblDichVu;
    private javax.swing.JLabel lblGiaDV;
    private javax.swing.JLabel lblMaDV;
    private javax.swing.JLabel lblSoLuong;
    private javax.swing.JLabel lblTTDichvu;
    private javax.swing.JLabel lblTenDV;
    private javax.swing.JButton btnTim;
    private javax.swing.JPanel pnlDSDichVu;
    private javax.swing.JPanel pnlDSPhong;
    private javax.swing.JPanel pnlDVDat;
    private javax.swing.JPanel pnlDichVu;
    private javax.swing.JPanel pnlMain;
    private javax.swing.JPanel pnlVien;
    private javax.swing.JScrollPane scrollPaneDSDichVu;
    private javax.swing.JScrollPane scrollPaneDSPhong;
    private javax.swing.JScrollPane scrollPaneDVDat;
    private javax.swing.JTable tblDSDV;
    private javax.swing.JTable tblDSPhong;
    private javax.swing.JTable tblDVDat;
    private javax.swing.JTextField txtFDGiaDV;
    private javax.swing.JTextField txtFdTenDV;
    private javax.swing.JTextField txtMaDV;
    private javax.swing.JTextField txtSoLuong;
    private javax.swing.JTextField txtTim;
    // End of variables declaration//GEN-END:variables
}
